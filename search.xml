<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python+OpenCV+MediaPipe手势识别</title>
      <link href="/2023/05/11/python-opencv-mediapipe-shou-shi-shi-bie/"/>
      <url>/2023/05/11/python-opencv-mediapipe-shou-shi-shi-bie/</url>
      
        <content type="html"><![CDATA[<h1 id="手势识别"><a href="#手势识别" class="headerlink" title="手势识别"></a>手势识别</h1><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E6%89%8B%E5%8A%BF%E8%AF%86%E5%88%AB/%E6%89%8B%E5%8A%BF%E8%AF%86%E5%88%AB.png" alt="手势识别"></p><blockquote><p>完整代码</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 导入需要使用的库</span><span class="token keyword">import</span> cv2  <span class="token comment"># opencv图像处理库</span><span class="token keyword">import</span> mediapipe <span class="token keyword">as</span> mp  <span class="token comment"># 谷歌开源的多媒体处理库</span><span class="token keyword">import</span> time  <span class="token comment"># 时间库</span><span class="token comment"># 调用OpenCV中的摄像头，0为内置摄像头，1为第一个外部摄像头，以此类推</span>cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 定义并初始化MediaPipe库中的手部检测模块</span>mpHands <span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>handshands <span class="token operator">=</span> mpHands<span class="token punctuation">.</span>Hands<span class="token punctuation">(</span><span class="token punctuation">)</span>mpDraw <span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>drawing_utils<span class="token comment"># 初始化计算FPS所需的变量</span>pTime <span class="token operator">=</span> <span class="token number">0</span>cTime <span class="token operator">=</span> <span class="token number">0</span><span class="token comment"># 循环读取摄像头中的图像</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    success<span class="token punctuation">,</span> img <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 读取摄像头中的图像</span>    imgRGB <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span>  <span class="token comment"># 将BGR格式的图像转换为RGB格式，以便使用MediaPipe处理</span>    <span class="token comment"># 使用MediaPipe库检测手部关键点</span>    results <span class="token operator">=</span> hands<span class="token punctuation">.</span>process<span class="token punctuation">(</span>imgRGB<span class="token punctuation">)</span>    <span class="token comment"># 判断是否检测到了手部关键点</span>    <span class="token keyword">if</span> results<span class="token punctuation">.</span>multi_hand_landmarks<span class="token punctuation">:</span>        <span class="token keyword">for</span> handLms <span class="token keyword">in</span> results<span class="token punctuation">.</span>multi_hand_landmarks<span class="token punctuation">:</span>            <span class="token comment"># 遍历每一个检测到的手</span>            <span class="token keyword">for</span> <span class="token builtin">id</span><span class="token punctuation">,</span> lm <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>handLms<span class="token punctuation">.</span>landmark<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token comment"># 获取手关键点在图像中的坐标</span>                h<span class="token punctuation">,</span> w<span class="token punctuation">,</span> c <span class="token operator">=</span> img<span class="token punctuation">.</span>shape                cx<span class="token punctuation">,</span> cy <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lm<span class="token punctuation">.</span>x <span class="token operator">*</span> w<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lm<span class="token punctuation">.</span>y <span class="token operator">*</span> h<span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">,</span> cx<span class="token punctuation">,</span> cy<span class="token punctuation">)</span>                <span class="token comment"># 在图像中绘制手关键点</span>                cv2<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token punctuation">(</span>cx<span class="token punctuation">,</span> cy<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>FILLED<span class="token punctuation">)</span>            <span class="token comment"># 绘制手部特征点的连线</span>            mpDraw<span class="token punctuation">.</span>draw_landmarks<span class="token punctuation">(</span>img<span class="token punctuation">,</span> handLms<span class="token punctuation">,</span> mpHands<span class="token punctuation">.</span>HAND_CONNECTIONS<span class="token punctuation">)</span>    <span class="token comment"># 计算FPS并显示在图像上</span>    cTime <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    fps <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span>cTime <span class="token operator">-</span> pTime<span class="token punctuation">)</span>    pTime <span class="token operator">=</span> cTime    cv2<span class="token punctuation">.</span>putText<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>fps<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>FONT_HERSHEY_PLAIN<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>    <span class="token comment"># 创建窗口</span>    cv2<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">"HandsImage"</span><span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>WINDOW_NORMAL<span class="token punctuation">)</span>    <span class="token comment"># 调整窗口大小</span>    cv2<span class="token punctuation">.</span>resizeWindow<span class="token punctuation">(</span><span class="token string">"HandsImage"</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">)</span>    <span class="token comment"># 在窗口中显示图像，并检测是否按下了'q'键，如果按下则退出循环</span>    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"HandsImage"</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span>    <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="脸部识别"><a href="#脸部识别" class="headerlink" title="脸部识别"></a>脸部识别</h1><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E6%89%8B%E5%8A%BF%E8%AF%86%E5%88%AB/%E8%84%B8%E9%83%A8%E8%AF%86%E5%88%AB.png" alt="脸部识别"></p><blockquote><p>完整代码</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token keyword">import</span> mediapipe <span class="token keyword">as</span> mp<span class="token keyword">import</span> time<span class="token comment"># 导入绘图工具和面部关键点模型</span>mp_drawing <span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>drawing_utilsmp_face_mesh <span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>face_mesh<span class="token comment"># 绘图配置</span>drawing_spec <span class="token operator">=</span> mp_drawing<span class="token punctuation">.</span>DrawingSpec<span class="token punctuation">(</span>thickness<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> circle_radius<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment"># 打开摄像头</span>cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 开启面部关键点检测器</span><span class="token keyword">with</span> mp_face_mesh<span class="token punctuation">.</span>FaceMesh<span class="token punctuation">(</span>        min_detection_confidence<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token comment"># 面部检测置信度阈值</span>        min_tracking_confidence<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span> <span class="token keyword">as</span> face_mesh<span class="token punctuation">:</span> <span class="token comment"># 面部追踪置信度阈值</span>    <span class="token comment"># 循环读取每一帧图像</span>    <span class="token keyword">while</span> cap<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        success<span class="token punctuation">,</span> image <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 读取一帧图像</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> success<span class="token punctuation">:</span> <span class="token comment"># 如果读取失败，跳过这一帧</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Ignoring empty camera frame."</span><span class="token punctuation">)</span>            <span class="token comment"># 如果是从视频文件中读取图像，使用 'break' 跳出循环</span>            <span class="token keyword">continue</span>        <span class="token comment"># 将图像水平翻转，以便后面进行自拍视图显示，并将 BGR 图像转换为 RGB</span>        image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>flip<span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span>        <span class="token comment"># 为了提高性能，可以将图像标记为不可写，以通过引用传递</span>        image<span class="token punctuation">.</span>flags<span class="token punctuation">.</span>writeable <span class="token operator">=</span> <span class="token boolean">False</span>        <span class="token comment"># 进行面部关键点检测</span>        results <span class="token operator">=</span> face_mesh<span class="token punctuation">.</span>process<span class="token punctuation">(</span>image<span class="token punctuation">)</span>        <span class="token comment"># 等待一段时间，避免图像卡顿</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.02</span><span class="token punctuation">)</span>        <span class="token comment"># 将图像标记为可写</span>        image<span class="token punctuation">.</span>flags<span class="token punctuation">.</span>writeable <span class="token operator">=</span> <span class="token boolean">True</span>        <span class="token comment"># 将 RGB 图像转换为 BGR</span>        image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>image<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_RGB2BGR<span class="token punctuation">)</span>        <span class="token comment"># 如果检测到面部关键点</span>        <span class="token keyword">if</span> results<span class="token punctuation">.</span>multi_face_landmarks<span class="token punctuation">:</span>            <span class="token keyword">for</span> face_landmarks <span class="token keyword">in</span> results<span class="token punctuation">.</span>multi_face_landmarks<span class="token punctuation">:</span>                <span class="token comment"># 在图像上绘制面部关键点和连接线</span>                mp_drawing<span class="token punctuation">.</span>draw_landmarks<span class="token punctuation">(</span>                    image<span class="token operator">=</span>image<span class="token punctuation">,</span>                    landmark_list<span class="token operator">=</span>face_landmarks<span class="token punctuation">,</span>                    connections<span class="token operator">=</span>mp_face_mesh<span class="token punctuation">.</span>FACEMESH_TESSELATION<span class="token punctuation">,</span> <span class="token comment"># 使用三角剖分的方式绘制面部连接线</span>                    landmark_drawing_spec<span class="token operator">=</span>drawing_spec<span class="token punctuation">,</span>                    connection_drawing_spec<span class="token operator">=</span>drawing_spec<span class="token punctuation">)</span>        <span class="token comment"># 在窗口中显示图像</span>        cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'MediaPipe FaceMesh'</span><span class="token punctuation">,</span> image<span class="token punctuation">)</span>        <span class="token comment"># 如果按下 ESC 键，跳出循环</span>        <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span> <span class="token operator">==</span> <span class="token number">27</span><span class="token punctuation">:</span>            <span class="token keyword">break</span><span class="token comment"># 释放摄像头资源</span>cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 关闭所有窗口</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> OpenCV </tag>
            
            <tag> MediaPipe </tag>
            
            <tag> 手势识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/05/10/hello-world/"/>
      <url>/2023/05/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> world </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>零基础实践深度学习</title>
      <link href="/2023/05/10/shen-du-xue-xi/ling-ji-chu-shi-jian-shen-du-xue-xi/ling-ji-chu-shi-jian-shen-du-xue-xi/"/>
      <url>/2023/05/10/shen-du-xue-xi/ling-ji-chu-shi-jian-shen-du-xue-xi/ling-ji-chu-shi-jian-shen-du-xue-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="机器学习和深度学习综述"><a href="#机器学习和深度学习综述" class="headerlink" title="机器学习和深度学习综述"></a>机器学习和深度学习综述</h1><h2 id="1-人工智能、机器学习、深度学习的关系"><a href="#1-人工智能、机器学习、深度学习的关系" class="headerlink" title="1. 人工智能、机器学习、深度学习的关系"></a>1. 人工智能、机器学习、深度学习的关系</h2><p>近些年人工智能、机器学习和深度学习的概念十分火热，但很多从业者却很难说清它们之间的关系，外行人更是雾里看花。在研究深度学习之前，先从三个概念的正本清源开始。概括来说，人工智能、机器学习和深度学习覆盖的技术范畴是逐层递减的，三者的关系如 <strong>图1</strong> 所示，即：人工智能 &gt; 机器学习 &gt; 深度学习。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AE%9E%E8%B7%B5%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%9B%BE1%EF%BC%9A%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E3%80%81%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%92%8C%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E4%B8%89%E8%80%85%E5%85%B3%E7%B3%BB%E7%A4%BA%E6%84%8F.png" alt="图1：人工智能、机器学习和深度学习三者关系示意"></p><p>人工智能（ArtificialIntelligence，AI）是最宽泛的概念，是研发用于模拟、延伸和扩展人的智能的理论、方法、技术及应用系统的一门新的技术科学。由于这个定义只阐述了目标，而没有限定方法，因此实现人工智能存在的诸多方法和分支，导致其变成一个“大杂烩”式的学科。机器学习（MachineLearning，ML）是当前比较有效的一种实现人工智能的方式。深度学习（DeepLearning，DL）是机器学习算法中最热门的一个分支，近些年取得了显著的进展，并替代了大多数传统机器学习算法。</p><h2 id="2-机器学习"><a href="#2-机器学习" class="headerlink" title="2. 机器学习"></a>2. 机器学习</h2><p>区别于人工智能，机器学习、尤其是监督学习则有更加明确的指代。机器学习是专门研究计算机怎样模拟或实现人类的学习行为，以获取新的知识或技能，重新组织已有的知识结构，使之不断改善自身的性能。这句话有点“云山雾罩”的感觉，让人不知所云，下面我们从机器学习的实现和方法论两个维度进行剖析，帮助读者更加清晰地认识机器学习的来龙去脉。</p><h3 id="2-1-机器学习的实现"><a href="#2-1-机器学习的实现" class="headerlink" title="2.1 机器学习的实现"></a>2.1 机器学习的实现</h3><p>机器学习的实现可以分成两步：训练和预测，类似于归纳和演绎：</p><ul><li><strong>归纳：</strong> 从具体案例中抽象一般规律，机器学习中的“训练”亦是如此。从一定数量的样本（已知模型输入<em>X</em>和模型输出<em>Y</em>）中，学习输出<em>Y</em>与输入<em>X</em>的关系（可以想象成是某种表达式）。</li><li><strong>演绎：</strong> 从一般规律推导出具体案例的结果，机器学习中的“预测”亦是如此。基于训练得到的<em>Y</em>与<em>X</em>之间的关系，如出现新的输入<em>X</em>，计算出输出<em>Y</em>。通常情况下，如果通过模型计算的输出和真实场景的输出一致，则说明模型是有效的。</li></ul><h3 id="2-2-机器学习的方法论"><a href="#2-2-机器学习的方法论" class="headerlink" title="2.2 机器学习的方法论"></a>2.2 机器学习的方法论</h3><p>机器学习的方法论和人类科研的过程有着异曲同工之妙，下面以“机器从牛顿第二定律实验中学习知识”为例，帮助读者更加深入理解机器学习（监督学习）的方法论本质，即在“机器思考”的过程中确定模型的三个关键要素：假设、评价、优化。</p><h4 id="2-2-1-案例：机器从牛顿第二定律实验中学习知识"><a href="#2-2-1-案例：机器从牛顿第二定律实验中学习知识" class="headerlink" title="2.2.1 案例：机器从牛顿第二定律实验中学习知识"></a>2.2.1 案例：机器从牛顿第二定律实验中学习知识</h4><hr><p><strong>牛顿第二定律</strong></p><p>牛顿第二定律是艾萨克·牛顿在1687年于《自然哲学的数学原理》一书中提出的，其常见表述：物体加速度的大小跟作用力成正比，跟物体的质量成反比，与物体质量的倒数成正比。牛顿第二运动定律和第一、第三定律共同组成了牛顿运动定律，阐述了经典力学中基本的运动规律。</p><p>在中学课本中，牛顿第二定律有两种实验设计方法：<strong>倾斜滑动法</strong>和<strong>水平拉线法</strong>，如 <strong>图2</strong> 所示。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AE%9E%E8%B7%B5%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%9B%BE2%EF%BC%9A%E7%89%9B%E9%A1%BF%E7%AC%AC%E4%BA%8C%E5%AE%9A%E5%BE%8B%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%B3%95.png" alt="图2：牛顿第二定律实验设计方法"></p><p>相信很多读者都有摆弄滑轮和小木块做物理实验的青涩年代和美好回忆。通过多次实验数据，可以统计出如 <strong>表1</strong> 所示的不同作用力下的木块加速度。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AE%9E%E8%B7%B5%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%A1%A81%EF%BC%9A%E5%AE%9E%E9%AA%8C%E8%8E%B7%E5%8F%96%E7%9A%84%E5%A4%A7%E9%87%8F%E6%95%B0%E6%8D%AE%E6%A0%B7%E6%9C%AC%E5%92%8C%E8%A7%82%E6%B5%8B%E7%BB%93%E6%9E%9C.png" alt="表1：实验获取的大量数据样本和观测结果"></p><p>观察实验数据不难猜测，物体的加速度<em>a</em>和作用力<em>F</em>之间的关系应该是线性关系。因此我们提出假设 <em>a</em>=<em>w</em>⋅<em>F</em>，其中，<em>a</em>代表加速度，<em>F</em>代表作用力，<em>w</em>是待确定的参数。</p><p>通过大量实验数据的训练，确定参数<em>w</em>是物体质量的倒数(1/)(1/<em>m</em>)，即得到完整的模型公式=⋅(1/)<em>a</em>=<em>F</em>⋅(1/<em>m</em>)。当已知作用到某个物体的力时，基于模型可以快速预测物体的加速度。例如：燃料对火箭的推力<em>F</em>=10，火箭的质量<em>m</em>=2，可快速得出火箭的加速度<em>a</em>=5。</p><h4 id="2-2-2-如何确定模型参数？"><a href="#2-2-2-如何确定模型参数？" class="headerlink" title="2.2.2 如何确定模型参数？"></a>2.2.2 如何确定模型参数？</h4><p>这个有趣的案例演示了机器学习的基本过程，但其中有一个关键点的实现尚不清晰，即：<strong>如何确定模型参数（<em>w</em>=1/<em>m</em>）？</strong></p><p>确定参数的过程与科学家提出假说的方式类似，合理的假说可以最大化的解释所有的已知观测数据。如果未来观测到不符合理论假说的新数据，科学家会尝试提出新的假说。如：天文史上，使用大圆和小圆组合的方式计算天体运行，在中世纪是可以拟合观测数据的。但随着欧洲工业革命的推动，天文观测设备逐渐强大，已有的理论已经无法解释越来越多的观测数据，这促进了使用椭圆计算天体运行的理论假说出现。因此，<strong>模型有效的基本条件是能够拟合已知的样本</strong>，这给我们提供了学习有效模型的实现方案。</p><p><strong>图3</strong> 是以<em>H</em>为模型的假设，它是一个关于参数<em>w</em>和输入<em>x</em>的函数，用<em>H</em>(<em>w</em>,<em>x</em>) 表示。模型的优化目标是<em>H</em>(<em>w</em>,<em>x</em>)的输出与真实输出<em>Y</em>尽量一致，两者的相差程度即是模型效果的评价函数（相差越小越好）。那么，确定参数的过程就是在已知的样本上，不断减小该评价函数（<em>H</em>和<em>Y</em>的差距）的过程。直到模型学习到一个参数<em>w</em>，使得评价函数的值最小，<strong>衡量模型预测值和真实值差距的评价函数也被称为损失函数（损失Loss）</strong>。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AE%9E%E8%B7%B5%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%9B%BE3%EF%BC%9A%E7%A1%AE%E5%AE%9A%E6%A8%A1%E5%9E%8B%E5%8F%82%E6%95%B0%E7%A4%BA%E6%84%8F%E5%9B%BE.jpeg" alt="图3：确定模型参数示意图"></p><p>假设机器通过尝试答对（最小化损失）大量的习题（已知样本）来学习知识（模型参数<em>w</em>），并期望用学习到的知识所代表的模型H*(<em>w</em>,<em>x</em>)，回答不知道答案的考试题（未知样本）。最小化损失是模型的优化目标，实现损失最小化的方法称为优化算法，也称为寻解算法（找到使得损失函数最小的参数解）。参数<em>w</em>和输入*x组成公式的基本结构称为假设。在牛顿第二定律的案例中，基于对数据的观测，我们提出了线性假设，即作用力和加速度是线性关系，用线性方程表示。由此可见，<strong>模型假设、评价函数（损失/优化目标）和优化算法是构成模型的三个关键要素</strong>。</p><h4 id="2-2-3-模型结构"><a href="#2-2-3-模型结构" class="headerlink" title="2.2.3 模型结构"></a>2.2.3 模型结构</h4><p>模型假设、评价函数和优化算法是如何支撑机器学习流程的呢？如<strong>图4</strong> 所示。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AE%9E%E8%B7%B5%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%9B%BE4%EF%BC%9A%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%B5%81%E7%A8%8B.png" alt="图4：机器学习流程"></p><ul><li><strong>模型假设</strong>：世界上的可能关系千千万，漫无目标的试探<em>Y~X</em>之间的关系显然是十分低效的。因此假设空间先圈定了一个模型能够表达的关系可能，如蓝色圆圈所示。机器还会进一步在假设圈定的圆圈内寻找最优的<em>Y~X</em>关系，即确定参数<em>w</em>。</li><li><strong>评价函数</strong>：寻找最优之前，我们需要先定义什么是最优，即评价一个<em>Y</em>~<em>X</em>关系的好坏的指标。通常衡量该关系是否能很好的拟合现有观测样本，将拟合的误差最小作为优化目标。</li><li><strong>优化算法</strong>：设置了评价指标后，就可以在假设圈定的范围内，将使得评价指标最优（损失函数最小/最拟合已有观测样本）的<em>Y</em>~<em>X</em>关系找出来，这个寻找最优解的方法即为优化算法。最笨的优化算法即按照参数的可能，穷举每一个可能取值来计算损失函数，保留使得损失函数最小的参数作为最终结果。</li></ul><p>从上述过程可以得出，机器学习的过程与牛顿第二定律的学习过程基本一致，都分为假设、评价和优化三个阶段：</p><ol><li><strong>假设</strong>：通过观察加速度<em>a</em>和作用力<em>F</em>的观测数据，假设<em>a</em>和<em>F</em>是线性关系，即<em>a</em>=<em>w</em>⋅<em>F</em>。</li><li><strong>评价</strong>：对已知观测数据上的拟合效果好，即<em>w</em>⋅<em>F</em>计算的结果要和观测的<em>a</em>尽量接近。</li><li><strong>优化</strong>：在参数<em>w</em>的所有可能取值中，发现<em>w</em>=1/<em>m</em>可使得评价最好（最拟合观测样本）。</li></ol><p>机器执行学习任务的框架体现了其<strong>学习的本质是“参数估计”</strong>（Learning is parameter estimation）。</p><p>上述方法论使用更规范化的表示如<strong>图5</strong>所示，未知目标函数<em>f</em>，以训练样本<em>D</em>=（x1，y1），…，（<em>x</em>1，<em>y</em>1），…，（<em>x**n</em>，<em>y**n</em>）为依据。从假设集合<em>H</em>中，通过学习算法<em>A</em>找到一个函数<em>g</em>。如果<em>g</em>能够最大程度的拟合训练样本<em>D</em>，那么可以认为函数<em>g</em>就接近于目标函数<em>f</em>。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AE%9E%E8%B7%B5%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%9B%BE5%EF%BC%9A%E8%A7%84%E8%8C%83%E5%8C%96%E8%A1%A8%E7%A4%BA.png" alt="图5：规范化表示"></p><p>在此基础上，许多看起来完全不一样的问题都可以使用同样的框架进行学习，如科学定律、图像识别、机器翻译和自动问答等，它们的学习目标都是拟合一个“大公式f”，如 <strong>图6</strong> 所示。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AE%9E%E8%B7%B5%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%9B%BE6%EF%BC%9A%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%B0%B1%E6%98%AF%E6%8B%9F%E5%90%88%E4%B8%80%E4%B8%AA%E2%80%9C%E5%A4%A7%E5%85%AC%E5%BC%8F%E2%80%9D.png" alt="图6：机器学习就是拟合一个“大公式”"></p><h2 id="3-深度学习"><a href="#3-深度学习" class="headerlink" title="3. 深度学习"></a>3. 深度学习</h2><p>机器学习算法理论在上个世纪90年代发展成熟，在许多领域都取得了成功，但平静的日子只延续到2010年左右。随着大数据的涌现和计算机算力提升，深度学习模型异军突起，极大改变了机器学习的应用格局。今天，多数机器学习任务都可以使用深度学习模型解决，尤其在语音、计算机视觉和自然语言处理等领域，深度学习模型的效果比传统机器学习算法有显著提升。</p><p>相比传统的机器学习算法，深度学习做出了哪些改进呢？其实<strong>两者在理论结构上是一致的，即：模型假设、评价函数和优化算法，其根本差别在于假设的复杂度</strong>。如 <strong>图6</strong> 第二个示例（图像识别）所示，对于美女照片，人脑可以接收到五颜六色的光学信号，能快速反应出这张图片是一位美女，而且是程序员喜欢的类型。但对计算机而言，只能接收到一个数字矩阵，对于美女这种高级的语义概念，从像素到高级语义概念中间要经历的信息变换的复杂性是难以想象的，如图7所示。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AE%9E%E8%B7%B5%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%9B%BE7%EF%BC%9A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%A8%A1%E5%9E%8B%E5%A4%8D%E6%9D%82%E5%BA%A6%E9%9A%BE%E4%BB%A5%E6%83%B3%E8%B1%A1.png" alt="图7：深度学习的模型复杂度难以想象"></p><p>这种变换已经无法用数学公式表达，因此研究者们借鉴了人脑神经元的结构，设计出神经网络的模型，如<strong>图8</strong>所示。图8（a）展示了神经网络基本单元-感知机的设计方案，其处理信息的方式与人脑中的单一神经元有很强的相似性；图8（b）展示了几种经典的神经网络结构（后续的章节中会详细阐述），类似于人脑中多种基于大量神经元连接而形成的不同职能的器官。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AE%9E%E8%B7%B5%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%9B%BE8%EF%BC%9A%E6%A8%A1%E6%8B%9F%E4%BA%BA%E8%84%91%E7%BB%93%E6%9E%84%EF%BC%8C%E9%92%88%E5%AF%B9%E5%90%84%E7%A7%8D%E4%BB%BB%E5%8A%A1%E8%AE%BE%E8%AE%A1%E4%B8%8D%E5%90%8C%E7%9A%84%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B.png" alt="图8：模拟人脑结构，针对各种任务设计不同的深度学习模型"></p><h3 id="3-1-神经网络的基本概念"><a href="#3-1-神经网络的基本概念" class="headerlink" title="3.1 神经网络的基本概念"></a>3.1 神经网络的基本概念</h3><p>人工神经网络包括多个神经网络层，如：卷积层、全连接层、LSTM等，每一层又包括很多神经元，超过三层的非线性神经网络都可以被称为深度神经网络。通俗的讲，深度学习的模型可以视为是输入到输出的映射函数，如图像到高级语义（美女）的映射，足够深的神经网络理论上可以拟合任何复杂的函数。因此神经网络非常适合学习样本数据的内在规律和表示层次，对文字、图像和语音任务有很好的适用性。这几个领域的任务是人工智能的基础模块，因此深度学习被称为实现人工智能的基础也就不足为奇了。</p><p>神经网络基本结构如 <strong>图9</strong> 所示。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AE%9E%E8%B7%B5%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%9B%BE9%EF%BC%9A%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="图9：神经网络基本结构示意图"></p><ul><li>神经元：神经网络中每个节点称为神经元，由两部分组成：<ul><li>加权和：将所有输入加权求和。</li><li>非线性变换（激活函数）：加权和的结果经过一个非线性函数变换，让神经元计算具备非线性的能力。</li></ul></li><li><strong>多层连接：</strong> 大量这样的节点按照不同的层次排布，形成多层的结构连接起来，即称为神经网络。</li><li><strong>前向计算：</strong> 从输入计算输出的过程，顺序从网络前至后。</li><li><strong>计算图：</strong> 以图形化的方式展现神经网络的计算逻辑又称为计算图，也可以将神经网络的计算图以公式的方式表达：<em>Y</em>=<em>f</em>3(<em>f</em>2(<em>f</em>1(<em>w</em>1⋅<em>x</em>1+<em>w</em>2⋅<em>x</em>2+<em>w</em>3⋅<em>x</em>3+<em>b</em>)+…)…)…)</li></ul><p>由此可见，神经网络并没有那么神秘，它的本质是一个含有很多参数的“大公式”。如果大家感觉这些概念仍过于抽象，理解的不够透彻，先不用着急，下一章会以“房价预测”为例，演示使用Python实现神经网络模型的细节。</p><h3 id="3-2-深度学习的发展历程"><a href="#3-2-深度学习的发展历程" class="headerlink" title="3.2 深度学习的发展历程"></a>3.2 深度学习的发展历程</h3><p>神经网络思想的提出已经是70多年前的事情了，现今的神经网络和深度学习的设计理论是一步步趋于完善的。在这漫长的发展岁月中，一些取得关键突破的闪光时刻，值得深度学习爱好者们铭记，如 <strong>图10</strong> 所示。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AE%9E%E8%B7%B5%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%9B%BE10%EF%BC%9A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%8F%91%E5%B1%95%E5%8E%86%E7%A8%8B.png" alt="图10：深度学习发展历程"></p><ul><li>**<br>1940年代**：首次提出神经元的结构，但权重是不可学的。</li><li><strong>50-60年代</strong>：提出权重学习理论，神经元结构趋于完善，开启了神经网络的第一个黄金时代。</li><li><strong>1969年</strong>：提出异或问题（人们惊讶的发现神经网络模型连简单的异或问题也无法解决，对其的期望从云端跌落到谷底），神经网络模型进入了被束之高阁的黑暗时代。</li><li><strong>1986年</strong>：新提出的多层神经网络解决了异或问题，但随着90年代后理论更完备并且实践效果更好的SVM等机器学习模型的兴起，神经网络并未得到重视。</li><li><strong>2010年左右</strong>：深度学习进入真正兴起时期。随着神经网络模型改进的技术在语音和计算机视觉任务上大放异彩，也逐渐被证明在更多的任务，如自然语言处理以及海量数据的任务上更加有效。至此，神经网络模型重新焕发生机，并有了一个更加响亮的名字：深度学习。</li></ul><p>为何神经网络到2010年后才焕发生机呢？这与深度学习成功所依赖的先决条件：大数据涌现、硬件发展和算法优化有关。</p><ul><li><strong>大数据是神经网络发展的有效前提</strong>。神经网络和深度学习是非常强大的模型，需要足够量级的训练数据。时至今日，之所以很多传统机器学习算法和人工特征依然是足够有效的方案，原因在于很多场景下没有足够的标记数据来支撑深度学习。深度学习的能力特别像科学家阿基米德的豪言壮语：“给我一根足够长的杠杆，我能撬动地球！”。深度学习也可以发出类似的豪言：“给我足够多的数据，我能够学习任何复杂的关系”。但在现实中，足够长的杠杆与足够多的数据一样，往往只能是一种美好的愿景。直到近些年，各行业IT化程度提高，累积的数据量爆发式地增长，才使得应用深度学习模型成为可能。</li><li><strong>依靠硬件的发展和算法的优化</strong>。现阶段，依靠更强大的计算机、GPU、autoencoder预训练和并行计算等技术，深度学习在模型训练上的困难已经被逐渐克服。其中，数据量和硬件是更主要的原因。没有前两者，科学家们想优化算法都无从进行。</li></ul><h3 id="3-3-深度学习的研究和应用蓬勃发展"><a href="#3-3-深度学习的研究和应用蓬勃发展" class="headerlink" title="3.3 深度学习的研究和应用蓬勃发展"></a>3.3 深度学习的研究和应用蓬勃发展</h3><p>早在1998年，一些科学家就已经使用神经网络模型识别手写数字图像了。但深度学习在计算机视觉应用上的兴起，还是在2012年ImageNet比赛上，使用AlexNet做图像分类。如果比较下1998年和2012年的模型，会发现两者在网络结构上非常类似，仅在细节上有所优化。在这十四年间，计算性能的大幅提升和数据量的爆发式增长，促使模型完成了从“简单的数字识别”到“复杂的图像分类”的跨越。</p><p>虽然历史悠久，但深度学习在今天依然在蓬勃发展，一方面基础研究快速发展，另一方面工业实践层出不穷。基于深度学习的顶级会议ICLR(International Conference on Learning Representations)统计，深度学习相关的论文数量呈逐年递增的状态，如 <strong>图11</strong> 所示。同时，不仅仅是深度学习会议，与数据和模型技术相关的会议ICML和KDD，专注视觉的CVPR和专注自然语言处理的EMNLP等国际会议的大量论文均涉及着深度学习技术。该领域和相关领域的研究方兴未艾，技术仍在不断创新突破中。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AE%9E%E8%B7%B5%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%9B%BE11%EF%BC%9A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9B%B8%E5%85%B3%E8%AE%BA%E6%96%87%E6%95%B0%E9%87%8F%E9%80%90%E5%B9%B4%E6%94%80%E5%8D%87.png" alt="img"></p><p>另一方面，以深度学习为基础的人工智能技术，在升级改造众多的传统行业领域，存在极其广阔的应用场景。<strong>图12</strong> 选自艾瑞咨询的研究报告，人工智能技术不仅可在众多行业中落地应用（广度），同时，在部分行业（如安防、遥感、互联网、金融、工业等）已经实现了市场化变现和高速增长（深度），为社会贡献了巨大的经济价值。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AE%9E%E8%B7%B5%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%9B%BE12%EF%BC%9A%E4%BB%A5%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E4%B8%BA%E5%9F%BA%E7%A1%80%E7%9A%84AI%E6%8A%80%E6%9C%AF%E5%9C%A8%E5%90%84%E8%A1%8C%E4%B8%9A%E5%B9%BF%E6%B3%9B%E5%BA%94%E7%94%A8.png" alt="图12：以深度学习为基础的AI技术在各行业广泛应用"></p><p>如<strong>图13</strong>所示，以计算机视觉的行业应用分布为例，根据IDC的数据统计和预测，随着人工智能向各个行业的渗透，当前较多运用人工智能的互联网行业的产值占比反而会逐渐变小。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AE%9E%E8%B7%B5%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%9B%BE13%EF%BC%9A%E4%BB%A5%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E4%B8%BA%E5%9F%BA%E7%A1%80%E7%9A%84AI%E6%8A%80%E6%9C%AF%E5%9C%A8%E5%90%84%E8%A1%8C%E4%B8%9A%E5%B9%BF%E6%B3%9B%E5%BA%94%E7%94%A8.png" alt="图13：以深度学习为基础的AI技术在各行业广泛应用"></p><h3 id="3-4-深度学习改变了AI应用的研发模式"><a href="#3-4-深度学习改变了AI应用的研发模式" class="headerlink" title="3.4 深度学习改变了AI应用的研发模式"></a>3.4 深度学习改变了AI应用的研发模式</h3><h4 id="3-4-1-实现了端到端的学习"><a href="#3-4-1-实现了端到端的学习" class="headerlink" title="3.4.1 实现了端到端的学习"></a>3.4.1 实现了端到端的学习</h4><p>深度学习改变了很多领域算法的实现模式。在深度学习兴起之前，很多领域建模的思路是投入大量精力做特征工程，将专家对某个领域的“人工理解”沉淀成特征表达，然后使用简单模型完成任务（如分类或回归）。而在数据充足的情况下，深度学习模型可以实现端到端的学习，即不需要专门做特征工程，将原始的特征输入模型中，模型可同时完成特征提取和分类任务，如 <strong>图14</strong> 所示。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AE%9E%E8%B7%B5%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%9B%BE14%EF%BC%9A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%AE%9E%E7%8E%B0%E4%BA%86%E7%AB%AF%E5%88%B0%E7%AB%AF%E7%9A%84%E5%AD%A6%E4%B9%A0.png" alt="图14：深度学习实现了端到端的学习"></p><p>以计算机视觉任务为例，特征工程是诸多图像科学家基于人类对视觉理论的理解，设计出来的一系列提取特征的计算步骤，典型如SIFT特征。在2010年之前的计算机视觉领域，人们普遍使用SIFT一类特征+SVM一类的简单浅层模型完成建模任务。</p><p><strong>说明：</strong></p><p>SIFT特征由David Lowe在1999年提出，在2004年加以完善。SIFT特征是基于物体上的一些局部外观的兴趣点而与影像的大小和旋转无关。对于光线、噪声、微视角改变的容忍度也相当高。基于这些特性，它们是高度显著而且相对容易撷取，在母数庞大的特征数据库中，很容易辨识物体而且鲜有误认。使用SIFT特征描述对于部分物体遮蔽的侦测率也相当高，甚至只需要3个以上的SIFT物体特征就足以计算出位置与方位。在现今的电脑硬件速度下和小型的特征数据库条件下，辨识速度可接近即时运算。SIFT特征的信息量大，适合在海量数据库中快速准确匹配。</p><h4 id="3-4-2-实现了深度学习框架标准化"><a href="#3-4-2-实现了深度学习框架标准化" class="headerlink" title="3.4.2 实现了深度学习框架标准化"></a>3.4.2 实现了深度学习框架标准化</h4><p>除了应用广泛的特点外，深度学习还推动人工智能进入工业大生产阶段，算法的通用性导致标准化、自动化和模块化的框架产生，如 <strong>图15</strong> 所示。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AE%9E%E8%B7%B5%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%20%E5%9B%BE15%EF%BC%9A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B%E5%85%B7%E6%9C%89%E9%80%9A%E7%94%A8%E6%80%A7%E7%89%B9%E7%82%B9.png" alt="图15：深度学习模型具有通用性特点"></p><p>在此之前，不同流派的机器学习算法理论和实现均不同，导致每个算法均要独立实现，如随机森林和支撑向量机（SVM）。但在深度学习框架下，不同模型的算法结构有较大的通用性，如常用于计算机视觉的卷积神经网络模型（CNN）和常用于自然语言处理的长期短期记忆模型(LSTM)，都可以分为组网模块、梯度下降的优化模块和预测模块等。这使得抽象出统一的框架成为了可能，并大大降低了编写建模代码的成本。一些相对通用的模块，如网络基础算子的实现、各种优化算法等都可以由框架实现。建模者只需要关注数据处理，配置组网的方式，以及用少量代码串起训练和预测的流程即可。</p><p>在深度学习框架出现之前，机器学习工程师处于“手工作坊”生产的时代。为了完成建模，工程师需要储备大量数学知识，并为特征工程工作积累大量行业知识。每个模型是极其个性化的，建模者如同手工业者一样，将自己的积累形成模型的“个性化签名”。而今，“深度学习工程师”进入了工业化大生产时代，只要掌握深度学习必要但少量的理论知识，掌握Python编程，即可在深度学习框架上实现非常有效的模型，甚至与该领域最领先的模型不相上下。建模领域的技术壁垒面临着颠覆，也是新入行者的机遇。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AE%9E%E8%B7%B5%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%9B%BE16%EF%BC%9A%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A1%86%E6%9E%B6%E5%A4%A7%E5%A4%A7%E5%87%8F%E4%BD%8E%E4%BA%86AI%E5%BB%BA%E6%A8%A1%E9%9A%BE%E5%BA%A6.png" alt="图16：深度学习框架大大减低了AI建模难度"></p><h2 id="4-人工智能的职业发展空间广阔"><a href="#4-人工智能的职业发展空间广阔" class="headerlink" title="4. 人工智能的职业发展空间广阔"></a>4. 人工智能的职业发展空间广阔</h2><blockquote><p>哲学家们告诉我们，做我们所喜欢的，然后成功就会随之而来。</p><p>—— 沃伦 · 巴菲特 （全球著名的投资家）</p></blockquote><p>相信本课程的读者中有很多在校筹备找工作的同学和职场中期望转型的工程师， 大家普遍对人工智能的职业发展非常关心。下面就从经济回报的视角，分析下人工智能是不是一个有前途的职业。坦率的说，如巴菲特所言，选择一个自己喜欢的职业是真正的好职业。但对于多数普通人，经济回报也是职业选择的重要考虑因素。一个有高经济回报的职业一定是市场需求远远大于市场供给的职业，且市场需求要保持长期的增长，而市场供给难以中短期得到补充。</p><ul><li><strong>人工智能岗位的市场需求旺盛</strong></li></ul><p>根据各大咨询公司的行业研究报告，人工智能相关产业在未来十年预计有30%~40%的年增长率。一方面，人工智能的应用会从互联网行业逐渐扩展到金融、工业、农业、能源、城市、交通、医疗、教育等更广泛的行业，应用空间和潜力巨大；另一方面，受限于工智能技术本身的成熟度以及人工智能落地要结合场景的数据处理、系统改造和业务流程优化等条件的制约，人工智能应用的价值释放过程会相对缓慢。这使得市场对人工智能的岗位需求形成了一条稳步又长期增长的曲线，与互联网行业相比，对多数的求职者更加友好，如<strong>图17</strong>所示。</p><p>互联网行业由于技术成熟周期短，应用落地的推进速度快，反而形成一条增长率更高（年增长率超过100%）但增长周期更短的曲线（电脑互联网时代10年，移动互联网时代10年）。当行业增长达到顶峰，对岗位的需求也会相应回落，如同2021年底的互联网行业的现状。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AE%9E%E8%B7%B5%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%9B%BE17%EF%BC%9A%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%B2%97%E4%BD%8D%E7%9A%84%E5%B8%82%E5%9C%BA%E4%BE%9B%E7%BB%99%E5%AF%B9%E6%AF%94.png" alt="图17：人工智能岗位的市场供给对比"></p><ul><li><strong>复合型人才成为市场刚需</strong></li></ul><p>在人工智能落地到千行万业的过程中，企业需求量最大、也最为迫切的是既懂行业知识和场景，又懂人工智能理论，还具备实践能力和经验的“复合型人才”。成为“复合型人才”不仅需要学习书本知识，还要大量进行产业实践，使得这种人才有成长深度，供给增长缓慢。从上述分析可见，当人工智能产业在未来几十年保持稳定的增长，而产业需要的“复合型人才”又难以大量供给的情况下，人工智能应用研发岗位会维持一个很好的经济回报。</p><p>人生天地之间，若白驹过隙，忽然而已，每个人都希望留下自己的足迹。为何要学习深度学习技术，以及如何通过这本书来学习呢？一方面，深度学习的应用前景广阔，是极好的发展方向和职业选择。另一方面，本书会使用国产的深度学习框架飞桨（PaddlePaddle）来编写实践案例，基于框架的编程让深度学习变得易学易用。</p><h3 id="作业1-1"><a href="#作业1-1" class="headerlink" title="作业1-1"></a>作业1-1</h3><ol><li>类比牛顿第二定律的案例，在你的工作和生活中还有哪些问题可以用监督学习的框架来解决？模型假设和参数是什么？评价函数（损失）是什么？</li><li>为什么说深度学习工程师有发展前景？怎样从经济学（市场供需）的角度做出解读？</li></ol>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图欧学习导航</title>
      <link href="/2023/04/25/tu-ou-xue-xi-dao-hang/"/>
      <url>/2023/04/25/tu-ou-xue-xi-dao-hang/</url>
      
        <content type="html"><![CDATA[<p><a href="https://tuostudy.upnb.top/">https://tuostudy.upnb.top/</a></p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%8A%B1%E4%B9%A6/%E5%9B%BE%E6%AC%A7%E5%AD%A6%E4%B9%A0%E5%AF%BC%E8%88%AA.png" alt="图欧学习导航"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>项成康の简历</title>
      <link href="/2023/04/12/jian-li/jian-li/"/>
      <url>/2023/04/12/jian-li/jian-li/</url>
      
        <content type="html"><![CDATA[<h1 style="border-bottom:none"><center> 个人简历 </center></h1><h2 style="border-bottom:none">基本信息</h2><table border="0" bgcolor="transparent" style="background: none;   " rules="none">  <tbody><tr style="background-color: white;border: none; ">    <td style="border: none; width:80%">姓  名：项成康</td>    <td style="border: none; ">年  龄：24岁</td>  </tr>   <tr style="background-color: white;border: none;">    <td style="border: none; ">联系方式：13970259034</td>     <td style="border: none; ">性  别：男</td>  </tr>  <tr style="background-color: white;border: none;">     <td style="border: none; ">电子邮箱：2043766637@qq.com</td>  </tr></tbody></table><h2 style="border-bottom:none">教育背景</h2><table border="0" bgcolor="transparent" style="background: none;   " rules="none">  <tbody><tr style="background-color: white;border: none; ">    <td style="border: none; width:25%;  ">硕士 南昌大学(在读) </td>          <td style="border: none;width:51%; ">软件工程专业</td>    <td style="border: none; ">2022.09——至今</td>  </tr>   <tr style="background-color: white;border: none;">    <td style="border: none; width:25%">本科 东华理工大学  </td>                 <td style="border: none;width:51%; ">软件工程专业</td>     <td style="border: none; ">2017.09——2021.07</td>  </tr></tbody></table><h2 style="border-bottom:none">知识技能</h2><ul><li>熟练掌握Java基本语法，具有良好的编码习惯和编程能力</li><li>熟悉基本的数据结构与算法，了解JVM、JUC相关知识，具有良好的面向对象的分析设计能力</li><li>熟练使用Spring、SpringMVC、MyBatis、MyBatis-Plus、SpringBoot等主流开发框架</li><li>熟悉数据库相关知识，能够熟练应用MySQL，Redis进行开发，熟练掌握sql语言的编写</li><li>掌握Linux操作系统的使用，熟悉Linux的基本命令行</li><li>熟悉使用IDEA、Maven、Git项目管理和项目构建工具</li></ul><h2 style="border-bottom:none">自我评价</h2><ul><li>会通过Google、GitHub、StackOverFlow等途径检索信息解决问题</li></ul>]]></content>
      
      
      <categories>
          
          <category> 简历 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 简历 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>动手学深度学习v2</title>
      <link href="/2023/04/12/shen-du-xue-xi/dong-shou-xue-shen-du-xue-xi-v2/"/>
      <url>/2023/04/12/shen-du-xue-xi/dong-shou-xue-shen-du-xue-xi-v2/</url>
      
        <content type="html"><![CDATA[<iframe src="//player.bilibili.com/player.html?aid=289532467&amp;bvid=BV1if4y147hS&amp;cid=330208219&amp;page=1" scrolling="no" border="20" frameborder="no" framespacing="0" allowfullscreen="allowfullscreen" height="498" width="100%"> </iframe>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 动手学深度学习v2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>花书</title>
      <link href="/2023/04/12/shen-du-xue-xi/hua-shu/"/>
      <url>/2023/04/12/shen-du-xue-xi/hua-shu/</url>
      
        <content type="html"><![CDATA[<iframe src="//player.bilibili.com/player.html?aid=69236102&amp;bvid=BV1kE4119726&amp;cid=218375692&amp;page=4" scrolling="no" border="20" frameborder="no" framespacing="0" allowfullscreen="allowfullscreen" height="498" width="100%"> </iframe><p> <a href="https://zhuanlan.zhihu.com/p/38431213">https://zhuanlan.zhihu.com/p/38431213</a></p><p><a href="https://github.com/MingchaoZhu/DeepLearning">https://github.com/MingchaoZhu/DeepLearning</a></p><p><a href="https://www.deeplearningbook.org/">https://www.deeplearningbook.org/</a></p><p><a href="https://www.bilibili.com/video/BV1Gk4y1m7LQ/?p=3&amp;spm_id_from=pageDriver&amp;vd_source=d385d14a269dd7bd8501115c4d6c76c9">https://www.bilibili.com/video/BV1Gk4y1m7LQ/?p=3&amp;spm_id_from=pageDriver&amp;vd_source=d385d14a269dd7bd8501115c4d6c76c9</a></p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%8A%B1%E4%B9%A6/wps5.jpg" alt="img"> </p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%8A%B1%E4%B9%A6/wps6.jpg" alt="img"><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%8A%B1%E4%B9%A6/wps7.jpg" alt="img"></p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%8A%B1%E4%B9%A6/wps8.jpg" alt="img"><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%8A%B1%E4%B9%A6/wps9.jpg" alt="img"><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%8A%B1%E4%B9%A6/wps10.jpg" alt="img"><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%8A%B1%E4%B9%A6/wps11.jpg" alt="img"><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%8A%B1%E4%B9%A6/wps12.jpg" alt="img"> </p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%8A%B1%E4%B9%A6/wps13.jpg" alt="img"> </p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%8A%B1%E4%B9%A6/wps14.jpg" alt="img"> </p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%8A%B1%E4%B9%A6/image-20230407101302412.png" alt="image-20230407101302412"></p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%8A%B1%E4%B9%A6/image-20230407101844070.png" alt="image-20230407101844070"></p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%8A%B1%E4%B9%A6/image-20230407102300598.png" alt="image-20230407102300598"></p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%8A%B1%E4%B9%A6/image-20230407165301684.png" alt="image-20230407165301684"></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 花书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自然辩证法</title>
      <link href="/2023/04/10/ke-cheng-xue-xi/zi-ran-bian-zheng-fa/"/>
      <url>/2023/04/10/ke-cheng-xue-xi/zi-ran-bian-zheng-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="1、自然辩证法的学科性质和研究内容。"><a href="#1、自然辩证法的学科性质和研究内容。" class="headerlink" title="1、自然辩证法的学科性质和研究内容。"></a>1、自然辩证法的学科性质和研究内容。</h1><blockquote><p>自然辩证法的学科性质</p></blockquote><p>自然辩证法是一门综合性的学科，结合了自然科学、社会科学和思维科学的马克思主义哲学理论。它研究整体上关于自然界和人类通过科学技术认识和改造自然的规律，科学技术的性质、发展规律和方法论，以及科学技术与人类社会的相互关系。自然辩证法与自然科学和技术学科有所区别，它是从具体科学技术认识上升到马克思主义普遍原理的中间环节，是马克思主义与科学技术的重要纽带。</p><blockquote><p>自然辩证法的研究内容</p></blockquote><p>自然辩证法包括马克思主义自然观、科学技术观、科学技术方法论和科学技术社会论。马克思主义自然观涵盖朴素唯物主义自然观、机械唯物主义自然观和辩证唯物主义自然观。马克思主义科学技术观分析科学技术的本质特征、发展模式和规律。马克思主义科学技术方法论总结了辩证思维形式和基本研究方法。马克思主义科学技术社会论探讨科学技术在社会中的运行规律和社会功能。中国马克思主义科学技术观是中国马克思主义者对科学技术的一般规律和原理的总结和概括，具有时代性、实践性和创新性。</p><h1 id="2、朴素唯物主义自然观、机械唯物主义自然观和辩证唯物主义自然观的观点、特征和作用。"><a href="#2、朴素唯物主义自然观、机械唯物主义自然观和辩证唯物主义自然观的观点、特征和作用。" class="headerlink" title="2、朴素唯物主义自然观、机械唯物主义自然观和辩证唯物主义自然观的观点、特征和作用。"></a>2、朴素唯物主义自然观、机械唯物主义自然观和辩证唯物主义自然观的观点、特征和作用。</h1><blockquote><p>朴素唯物主义自然观：</p></blockquote><ul><li>观点：朴素唯物主义自然观认为自然界是客观存在的物质世界，物质是一切存在的基础，一切现象都可以通过物质的运动和变化来解释。它强调感性认识，重视对自然界直接观察和实证研究。</li><li>特征：朴素唯物主义自然观注重对自然现象的表面描述和直观感知，关注事物的外部联系和现象背后的直接原因。它倾向于简化复杂的自然现象，将其归因于物质实体和机械的因果关系。</li><li>作用：朴素唯物主义自然观为科学的初级阶段提供了基础。它通过对自然界的简单观察和实验，推动了对自然规律的初步认识，为后续科学发展奠定了基础。</li></ul><blockquote><p>机械唯物主义自然观：</p></blockquote><ul><li>观点：机械唯物主义自然观认为自然界是由物质构成的机械系统，其运动和变化可以通过机械的力和运动规律来解释。它强调对自然界的定量分析和机械模型的构建。</li><li>特征：机械唯物主义自然观注重对自然界的量化测量和定律的建立。它强调因果关系和机械决定论，认为自然界的运动是由物质实体之间的机械作用所决定的。</li><li>作用：机械唯物主义自然观在科学革命时期起到了重要作用。它推动了科学方法的发展，促进了实验观察和定量分析的应用，为现代科学的兴起提供了基础。</li></ul><blockquote><p>辩证唯物主义自然观：</p></blockquote><ul><li>观点：辩证唯物主义自然观认为自然界是一个复杂的辩证系统，包含着矛盾和统一的运动。它强调研究事物的内部矛盾和发展规律，揭示事物的质量变化、量变积累和飞跃发展。</li><li>特征：辩证唯物主义自然观注重对自然界的内部矛盾和相互作用的研究。它强调事物的发展是由内部矛盾的斗争推动的，通过矛盾的统一和质的飞跃实现事物的发展。</li><li>作用：辩证唯物主义自然观为深入理解自然界的规律和变化提供了重要方法和理论基础。它指导科学研究者更全面地认识自然界的复杂性，促进科学的综合发展和创新。</li></ul><h1 id="3、如何理解朴素唯物主义自然观、机械唯物主义自然观和辩证唯物主义自然观的辩证关系"><a href="#3、如何理解朴素唯物主义自然观、机械唯物主义自然观和辩证唯物主义自然观的辩证关系" class="headerlink" title="3、如何理解朴素唯物主义自然观、机械唯物主义自然观和辩证唯物主义自然观的辩证关系?"></a>3、如何理解朴素唯物主义自然观、机械唯物主义自然观和辩证唯物主义自然观的辩证关系?</h1><blockquote><p>朴素唯物主义自然观为后续的认识提供了基础，机械唯物主义自然观在其基础上进一步强调了定律性和机械因果关系，而辩证唯物主义自然观则在机械唯物主义自然观的基础上深入研究了事物内部的矛盾和发展规律。朴素唯物主义自然观、机械唯物主义自然观和辩证唯物主义自然观代表了人类对自然界认识的不同阶段和演变过程，它们之间存在着辩证关系。</p></blockquote><ul><li><p>首先，朴素唯物主义自然观是人们最初对自然界的直观认识。它强调感性认识和对自然现象的表面描述，关注事物的外部联系和现象背后的直接原因。朴素唯物主义自然观为后续的认识提供了基础，为人们进一步深入研究自然界奠定了基础。</p></li><li><p>随着科学方法的发展，机械唯物主义自然观出现了。机械唯物主义自然观强调对自然界的定量分析和机械模型的构建，它关注因果关系和自然界的定律性。机械唯物主义自然观在朴素唯物主义自然观的基础上发展，推动了科学方法的进一步应用和发展。</p></li><li><p>然而，随着科学的深入和对自然界的更深层次认识，辩证唯物主义自然观被提出。辩证唯物主义自然观强调事物内部的矛盾和发展规律，它认识到自然界是一个复杂的辩证系统，事物的发展是由内部矛盾的斗争推动的。辩证唯物主义自然观超越了机械唯物主义自然观，提供了更为全面和深刻的对自然界的认识和理解。</p></li></ul><h1 id="4、生态自然观的主要观点、特征和作用。"><a href="#4、生态自然观的主要观点、特征和作用。" class="headerlink" title="4、生态自然观的主要观点、特征和作用。"></a>4、生态自然观的主要观点、特征和作用。</h1><blockquote><p>生态自然观的主要观点。</p></blockquote><ul><li><p>生态自然界系统具有整体性、多样性、层次性、开放性、动态性、自适应性和自组织性等特征；它是多样性和整体性、平衡和非平衡的统一，天然自然界和人工自然界的统一。</p></li><li><p>通过从自然界的人工化转向生态化，从非生态型人工自然界转向生态型人工自然界，“人类必须敬畏自然、尊重自然、顺应自然、保护自然”，“牢固树立和切实践行绿水青山就是金山银山的理念”,“着力推进人与自然和谐共生”，“动员全社会力量推进生态文明建设,共建美丽中国”,，实现人和自然界的可持续发展。</p></li><li><p>贯彻落实新发展理念，“加大生态系统保护力度”，“改革生态环境监管体制”， 实施节能减排和发展低碳经济,构建和谐社会,建设生态文明。</p></li></ul><blockquote><p>生态自然观的基本特征。</p></blockquote><ul><li>全球性。它是以生态视角，代表地球人类（包括后代人）的利益，研究全球生态或环境问题形成的自然观。</li><li>批判性。它从生态视角或人类的视角，反思和批判人类的理念和行为及其后果，强调人与自然界是和谐统一的生命共同体。</li><li>和谐性。它强调科学技术与自然界及社会之间的全面、协调、可持续发展，强调人类社会和其他生命体和非生命体的和谐统一。</li></ul><blockquote><p>生态自然观的作用</p></blockquote><ul><li><strong>丰富和发展了马克思主义自然观</strong>。它倡导系统思维方式,发挥人的主体创造性，强化人与自然界协调发展的生态意识，促进了马克思主义自然观在认识人类与生态系统关系方面的发展。</li><li><strong>有助于深入理解新发展理念。</strong>(1)新发展理念包括创新、协调、绿色、开放、共享，它们旨在解决发展的动力问题、不平衡问题、人与自然和谐问题、内外联动问题和社会公平正义问题,它们彼此“相互贯通、相互促进,是具有内在联系的集合体”。（2）生态自然观强调人和生态系统的和谐发展，有助于人们“以新的发展理念引领发展”，“把新发展理念落到实处”，“坚持节约资源和保护环境的基本国策”；“加强生态文明体制改革,建设美丽中国”。</li><li>3.<strong>有助于生态文明建设</strong>。(1) “生态文明建设是‘五位一体’总体布局和‘四个全面’战略布局的重要内容”，它“功在当代、利在千秋”，“是中华民族永续发展的千年大计”。(2)生态自然观强调人类与自然界的共生关系，强调“环境就是民生，青山就是美丽，蓝天也是幸福，绿水青山就是金山银山”，“保护环境就是保护生产力，改善环境就是发展生产力”，为建设生态文明奠定了理论基础。(3)“弘扬塞罕坝精神，持之以恒推进生态文明建设”;“加快构建生态文明体系”,即以生态价值观为准则的生态文化体系,以产业生态化和生态产业化为主体的生态经济体系，以改善生态环境质量为核心的目标责任体系,以治理体系和治理能力现代化为保障的生态文明制度体系,以生态系统良性循环和环境风险有效防控为重点的生态安全体系, “走出一条生产发展、生活富裕、生态良好的文明发展道路”“努力走向社会主义生态文明新时代”。</li></ul><h1 id="5、系统自然观、人工自然观和生态自然观既相对独立又相辅相成的关系。"><a href="#5、系统自然观、人工自然观和生态自然观既相对独立又相辅相成的关系。" class="headerlink" title="5、系统自然观、人工自然观和生态自然观既相对独立又相辅相成的关系。"></a>5、系统自然观、人工自然观和生态自然观既相对独立又相辅相成的关系。</h1><ul><li>它们都围绕人与自然界关系的主题，丰富和发展了马克思主义自然观的本体论、认识论和方法论；它们都坚持人类与自然界、人工自然界与天然自然界、人与生态系统的辩证统一，都为贯彻落实新发展理念和生态文明建设奠定了理论基础。</li><li>它们在研究人与自然界的关系方面各有其侧重点:系统自然观为正确认识和处理人与自然界的关系提供了新的思维方式;人工自然观突出并反思了人的主体性和创造性；生态自然观站在人类文明的立场，强调了人与自然界的协调发展和生态文明建设。</li><li>它们在研究人与自然界的关系方面相互关联：系统自然观通过系统思维方式，为人工自然观和生态自然观提供了方法论基础;人工自然观通过突出人的主体性和实践性,为系统自然观和生态自然观提供了认识论前提；生态自然观通过强调人与自然界的统一性、协调性的关系，为系统自然观和人工自然观指明了发展方向和目标标。</li></ul><h1 id="6、如何弘扬塞罕坝精神，建设美丽中国"><a href="#6、如何弘扬塞罕坝精神，建设美丽中国" class="headerlink" title="6、如何弘扬塞罕坝精神，建设美丽中国?"></a>6、如何弘扬塞罕坝精神，建设美丽中国?</h1><p>弘扬塞罕坝精神和建设美丽中国是一项重要的任务，需要广泛的参与和共同努力。</p><ol><li><p>加强环境保护意识：通过宣传教育、媒体宣传等方式，提高人们对环境保护的认识和重视。鼓励人们从小事做起，如垃圾分类、节约用水、减少能源消耗等，积极参与到环境保护中来。</p></li><li><p>推动绿色发展：促进可持续发展和绿色经济，鼓励绿色技术和创新的应用。支持和培育环保产业，推动低碳、循环经济的发展，减少对环境的负面影响。</p></li><li><p>加强生态修复和保护：重视生态系统的保护和修复工作，加强生态保护区的管理和建设。鼓励植树造林、生态恢复项目，恢复和改善生态环境，保护珍稀濒危物种。</p></li><li><p>倡导绿色生活方式：鼓励人们采取低碳、环保的生活方式，如步行、骑行、乘坐公共交通工具等，减少机动车使用。倡导节约用水、用电，减少塑料和一次性产品的使用等。</p></li><li><p>弘扬塞罕坝精神：塞罕坝精神以奋斗、拼搏和不懈努力为核心，鼓励人们发扬这种精神，勇于面对挑战，努力实现个人的价值和社会的发展。通过故事、文化传承等方式，将塞罕坝精神融入到社会的各个领域和层面。</p></li><li><p>加强政策和法规的制定和执行：建立健全的环境保护和生态文明建设的法律法规体系，强化对环境违法行为的惩罚力度，确保环境保护政策的有效执行。</p></li><li><p>激励和奖励措施：设立奖励机制，鼓励和激励个人、企业和组织在环境保护和生态建设方面做出积极贡献。设立奖项，表彰那些在保护环境、改善生态方面做出杰出贡献的个人和团体。</p></li></ol><p>这些措施旨在促进社会各界的共同参与和行动，形成全社会共同推动塞罕坝精神和美丽中国建设的良好氛围。同时，重要的是持之以恒，长期坚持并不断完善这些努力，以实现可持续的环境保护和美丽中国的目标。</p><h1 id="7、马克思、恩格斯科学技术思想形成的科学技术基础。"><a href="#7、马克思、恩格斯科学技术思想形成的科学技术基础。" class="headerlink" title="7、马克思、恩格斯科学技术思想形成的科学技术基础。"></a>7、马克思、恩格斯科学技术思想形成的科学技术基础。</h1><p>马克思、恩格斯科学技术思想形成的科学技术基础18、19世纪，天文学、地学、物理学、化学、解剖学、生物学等都有了长足的发展，特别是能量守恒与转化定律、细胞学说和生物进化论三大发现,使自然科学的发展进入了一个新时期,两次科技革命使人类进入了工业文明时代。马克思、恩格斯在总结和概括 19世纪科学技术成果的基础上，形成了以辩证唯物主义为理论基础的科学技术思想。</p><h1 id="8、马克思、恩格斯科学技术思想的基本内容。"><a href="#8、马克思、恩格斯科学技术思想的基本内容。" class="headerlink" title="8、马克思、恩格斯科学技术思想的基本内容。"></a>8、马克思、恩格斯科学技术思想的基本内容。</h1><blockquote><p>马克思、恩格斯科学技术思想的基本内容</p></blockquote><p>1）对科学技术的理解</p><p>科学是建立在实践基础之上，通过实践对自然的认识与解释，是人类对客观世界规律的理论概括，是社会发展的一般精神成果。</p><p>技术在本质上体现了人对自然的实践关系。</p><p>2）科学的分类</p><p>分类依据：物质运动形式</p><p>研究对象：运动着的物体</p><p>科学分类：数学、天文学、物理学、化学、生物学等。</p><p>3）科学技术与哲学的关系</p><p>科学技术对哲学的推动作用，科学的发展也受到哲学的制约和影响。科学与哲学在研究对象上具有本质上的共同点和内在的一致性。科学研究作为一种认识活动，必须通过理论思维才能揭示对象的本质和规律，这就自然地与哲学发生紧密的联系。</p><p>4）科学技术是生产力</p><p>马克思提出了科学是生产力的思想。“资本是以生产力的一定的现有的历史发展为前提的——在这些生产力中也包括科学。”马克思认为，社会生产力不仅以物质形态存在，而且以知识形态存在，自然科学就是以知识形态为特征的一般社会生产力。</p><p>5）科学技术的生产动因</p><p>马克思认为自然科学本身的发展，“仍然是在资本主义生产的基础上进行的，这种资本主义生产第一次在相当大的程度上为自然科学创造了进行研究、观察、实验的物质手段”。恩格斯认为近代以来科学“以神奇的速度发展起来，那么，我们要再次把这个奇迹归功于生产。”而“社会一旦有技术上的需要，则这种需要就会比十所大学更能把科学推向前进。”</p><p>6）科学技术的社会功能</p><p>科学是最高意义的革命力量。科学革命的出现，打破了宗教神学关于自然的观点，使人类的关注回到人类自身。科学与技术的结合推动了产业革命，产业革命促使市民社会在经济结构和社会生产关系上发生了全面变革。</p><p>科学技术是生产方式和生产关系革命化的因素。科学技术的发展,必然引起生产关系本身的变革。</p><p>7）科学技术与社会制度</p><p>马克思、恩格斯探讨了新兴资产阶级与自然科学的关系。“只有资本主义生产才把物质生产过程变成科学在生产中的应用——被运用于实践的科学。”</p><p>马克思、恩格斯揭示了资本主义制度下劳动者与科学技术的关系。“科学根本不费资本家‘分文’，但这丝毫不妨碍他们去利用科学。资本像吞并他人的劳动一样，吞并‘他人的’科学。”</p><p>马克思、恩格斯预见：只有在劳动共和国,科学才能起到它真正的作用。马克思、恩格斯认为，科学家需要依靠历史的产物和群众的智慧。</p><p>8）科学与技术的相互关系</p><p>在早期漫长的人类文明史进程中，科学与技术彼此处于相对独立的状态发展，这种状况在第一次技术革命前后发生改变，科学与技术开始彼此靠拢、相互促进、逐步融合。马克思、恩格斯深入考察了科学与技术的相互作用关系。“技术在很大程度上依赖于科学状况，那么，科学则在更大得多的程度上依赖于技术的状况和需要。”</p><p>9）科学技术异化</p><p>马克思在批判尤尔为科学的资本化辩护时深刻揭示了资本主义条件下的科学异化现象，马克思指出：“尤尔还证明，‘被招募来为资本服务的科学’在资本与劳动的一切冲突中虽然迫使工人‘无条件投降’，并保证资本享有‘合法权利’，来充当工厂头脑并把工人降低到工厂的没有头脑的、没有意志的肢体的地位，然而资本招募来的科学并没有被用来压制‘被压迫阶级’。”</p><p>马克思有关技术异化的思想多是潜在地包含于其劳动异化理论之中，深入考察了资本主义条件下由于产业技术的发展以及资本主义统治与剥削造成的技术异化现象。马克思指出，“机器具有减少人类劳动和使劳动更有成效的神奇力量，然而却引起了饥饿和过度的疲劳。财富的新源泉，由于某种奇怪的、不可思议的魔力而变成贫困的源泉。技术的胜利，似乎是以道德的败坏为代价换来的。”</p><h1 id="9、马克思、恩格斯如何强调科学技术与哲学的密切关系"><a href="#9、马克思、恩格斯如何强调科学技术与哲学的密切关系" class="headerlink" title="9、马克思、恩格斯如何强调科学技术与哲学的密切关系?"></a>9、马克思、恩格斯如何强调科学技术与哲学的密切关系?</h1><p>马克思和恩格斯强调科学技术与哲学的密切关系，他们认为科学技术的发展和哲学的思考是相互依赖和相互影响的。以下是他们对科学技术与哲学关系的一些观点：</p><ol><li><p>科学技术是实践的产物：马克思和恩格斯认为科学技术是人类实践的产物，是人们对自然界进行实践和认识的结果。他们指出，科学技术的发展需要对现实世界进行观察、实验和分析，这与哲学思考的实践性质相契合。</p></li><li><p>科学技术的哲学基础：马克思和恩格斯指出，科学技术的发展离不开哲学的指导和支持。他们认为科学技术的进步依赖于人们对事物本质、规律和矛盾的深刻认识，而这些认识正是哲学研究的对象。哲学的基本问题，如存在、认识、辩证法等，为科学技术的研究和实践提供了理论框架和思维工具。</p></li><li><p>科学技术对哲学的挑战：马克思和恩格斯意识到科学技术的发展对哲学思考提出了新的挑战。他们认为，科学技术的进步可以改变人们的认识方式和世界观，对传统哲学观念提出质疑。他们主张将哲学从空洞的抽象思辨中解放出来，把它与科学技术的实践相结合，为人类社会的进步和解放提供理论指导。</p></li><li><p>科学技术与人类解放的关系：马克思和恩格斯认为科学技术的发展是人类解放的重要条件之一。他们强调科学技术的社会性和历史性，认为科学技术的进步可以改变人类社会的生产方式和生活条件，推动人类社会向着共产主义社会的方向发展。在这个意义上，科学技术的发展与哲学所关注的人类解放和社会变革的目标是密切相关的。</p></li></ol><p>综上所述，马克思和恩格斯强调科学技术与哲学的密切关系，认为科学技术的发展离不开哲学的指导和支持，同时科学技术的进步也对哲学思考提出了新的挑战。他们的思想为科学技术与哲学的关系提供了深刻的思考和理论基础。</p><h1 id="10、马克思、恩格斯关于科学技术发展模式及动力的分析"><a href="#10、马克思、恩格斯关于科学技术发展模式及动力的分析" class="headerlink" title="10、马克思、恩格斯关于科学技术发展模式及动力的分析"></a>10、马克思、恩格斯关于科学技术发展模式及动力的分析</h1><p>马克思、恩格斯关于科学发展模式及动力的分析</p><ol><li><p>科学发展呈现两种趋势恩格斯指出自然科学发展的两种形式：一种是自然科学由搜集材料与分析材料转向整理材料与综合材料，另一种是自然科学从研究较简单的运动形式转向研究较复杂的运动形式。</p></li><li><p>科学发展是渐进的过程马克思在分析技术体系的演进时指出，“正像各种不同的地质层系相继更迭一样，在各种不同的经济社会形态的形成上，不应该相信各个时期是突然出现的，相互截然分开的。在手工业内正在联网识别并翻译….部，孕育着工场手工业的萌芽”。同时他指出：“在这里，起作用的普遍规律在于：后一个[生产]形式的物质可能性——不论是工艺技术条件，还是与其相适应的企业经济结构——都是在前一个形式的范围内创造出来的。”</p></li><li><p>科学发展是内外动力共同作用的结果科学发展的外部动力一方面表现在社会生产的需要推动了科学研究成果的应用,另一方面表现在“资本主义生产第一次在相当大的程度上为自然科学创造了进行研究、观察、实验的物质手段”。</p></li></ol><p>科学发展的内部动力表现在科学实验水平的提高引发了科学内部科学理论本身的争论,以及与科学实验发展的不平衡,从而迫切需要进一步完善科学理论。</p><h1 id="11、波普尔的证伪主义模式和库恩的历史主义模式。"><a href="#11、波普尔的证伪主义模式和库恩的历史主义模式。" class="headerlink" title="11、波普尔的证伪主义模式和库恩的历史主义模式。"></a>11、波普尔的证伪主义模式和库恩的历史主义模式。</h1><p>波普尔的证伪主义模式和库恩的历史主义模式是科学哲学中两种不同的观点，用于解释科学理论的形成、演变和验证。下面我会简要介绍这两种模式的主要内容：</p><ol><li><p>波普尔的证伪主义模式（Popper’s Falsificationism）：</p><ul><li>波普尔认为科学的核心是通过反驳（falsification）来进行理论验证。他提出了”证伪性”的概念，认为科学理论应该具有可被证伪的性质。</li><li>根据波普尔，科学家应该提出可以进行实证检验的假设，并进行实验证据来尝试证伪这些假设。如果理论在实验或观察中被证伪，就应该被修正或者被废弃。</li><li>波普尔认为，科学理论永远无法被证实，只能通过不断的反驳来增加它们的可信度。</li></ul></li><li><p>库恩的历史主义模式（Kuhn’s Historicist Model）：</p><ul><li>库恩强调科学发展的历史过程中存在”科学革命”的概念。科学革命是指由一种”范式”（paradigm）向另一种范式的转变，而不是简单的渐进式演化。</li><li>根据库恩，科学界存在着被共同接受的范式，它们构成了科学研究的框架和基础。科学家在这些范式下进行研究和理论构建。</li><li>当新的观念和发现出现时，可能与当前的范式发生冲突。这些冲突最终可能导致范式的崩溃和科学革命的发生，即科学界采用新的范式来解释和理解现象。</li><li>库恩认为，科学的发展不是线性的，而是存在着阶段性的革命和演变，每个范式都有其内部的规则和共识。</li></ul></li></ol><p>尽管波普尔和库恩的观点有所不同，但它们都对科学研究的方法和理论演变提出了重要的贡献。波普尔的证伪主义模式强调实证验证和理论的可证伪性，而库恩的历史主义模式关注科学的发展历程和范式的变化。这两种观点都对科学哲学的研究和科学实践产生了深远的影响。</p><h1 id="12、如何理解辩证思维渗透在科学研究的全部过程中"><a href="#12、如何理解辩证思维渗透在科学研究的全部过程中" class="headerlink" title="12、如何理解辩证思维渗透在科学研究的全部过程中?"></a>12、如何理解辩证思维渗透在科学研究的全部过程中?</h1><ul><li><p>辩证思维是马克思主义科学技术方法论的核心。</p></li><li><p>辩证思维渗透到科学研究中:马克思主义科学技术方法论的基本原则就是把辩证法贯穿到科学技术研究中,以对立统一、质量互变和否定之否定的辩证思维渗透到具体的科学技术研究中,把握具体科学技术的研究过程。</p></li><li><p>现代科学研究高度分化和高度综合相统一的时代特征,使辩证思维与科学研究的相互依赖性更加密切。</p><ul><li><p>辩证思维方法是现代科学思维方法的方法论前提</p><ul><li><p>广泛作用于现代科学研究</p></li><li><p>经验向科学理论转化的必要工具</p></li><li><p>为科学创新提供动力</p></li></ul></li><li><p>现代科学思维方法丰富了辩证思维的内涵：现代科学研究方法及其成果丰富和深化了辩证思维方法，从各方面充实了辩证思维中的世界图景</p></li></ul></li></ul><h1 id="13、科学技术与经济转型。"><a href="#13、科学技术与经济转型。" class="headerlink" title="13、科学技术与经济转型。"></a>13、科学技术与经济转型。</h1><blockquote><p>①引发技术创新模式的改变</p></blockquote><p>科学技术的进步推动了技术创新的不断发展，改变了传统的创新方式和模式。新兴技术的出现，如人工智能、大数据、云计算等，催生了新的产业和商业模式，对经济产生了深刻的影响。这种技术创新模式的改变可以推动经济从传统产业向知识经济、数字经济等高附加值领域转型。</p><blockquote><p>②推动生产力要素的变革</p></blockquote><p>科学技术的进步可以改变和提升生产力要素，包括劳动力、资本和自然资源。自动化技术、机器人技术和数字化技术等的应用，提高了生产效率和质量，减少了对劳动力和资源的需求，推动了经济转型。科学技术的进步还促进了新的生产力要素的发展，例如人力资本和创新能力的重要性逐渐凸显。</p><blockquote><p>③促进经济结构的调整</p></blockquote><p>科学技术的进步对经济结构产生重要的影响。新兴技术的应用和创新活动推动了产业结构的调整和升级。传统产业逐渐减少，而高科技产业、服务业和创新驱动型产业等新兴领域得到了发展。这种经济结构的调整对于经济转型和提高竞争力至关重要。</p><h1 id="14、马克思劳动和技术异化理论。"><a href="#14、马克思劳动和技术异化理论。" class="headerlink" title="14、马克思劳动和技术异化理论。"></a>14、马克思劳动和技术异化理论。</h1><p>马克思一方面充分肯定了技术在社会中,特别是在资本主义社会发展中发挥的巨大作用，另一方面也揭示了在资本主义条件下技术的运用所产生的异化现象。他提到,在资本主义社会中,“科学对于劳动来说,表现为异己的、敌对的和统治的权力”,“所以文明的进步只会增大支配劳动的客体的权力”, “这种科学并不存在于工人的意识中,而是作为异己的力量,作为机器本身的力量，通过机器对工人发生作用”。</p><p>然而，马克思并没有因此把技术本身当作罪恶之源，他认为资本主义的生产关系是技术异化现象得以产生的社会历史根源。,他指出, “因为机器就其本身来说缩短劳动时间,而它的资本主义应用延长工作日；因为机器本身减轻劳动，而它的资本主义应用提高劳动强度；因为机器本身是人对自然力的胜利，而它的资本主义应用使人受自然力奴役;因为机器本身增加生产者的财富，而它的资本主义应用使生产者变成需要救济的贫民”。</p><p>马克思对技术异化现象的批判，把对技术的批判与对资本主义制度的批判有机地结合起来。这既不是技术决定论的，也不是社会决定论的，对于我国现阶段科学技术应用具有重要的启发作用。</p><h1 id="15、科学文化与人文文化的冲突与协调。"><a href="#15、科学文化与人文文化的冲突与协调。" class="headerlink" title="15、科学文化与人文文化的冲突与协调。"></a>15、科学文化与人文文化的冲突与协调。</h1><blockquote><p><strong>科学文化</strong>与人文文化的冲突与协调。</p></blockquote><p>英国学者 C.P. 斯诺指出“科学文化与人文文化”这两种文化之间存在分歧与冲突,从事科学文化的人（科学家）和从事人文文化的人（如文学家）之间存在冲突。 在当代，这种冲突仍然有其具体体现，需要我们在承认科学与人文、科学文化与人文文化之间的内在差异和各自功能的基础上,加强科学工作者与人文工作者之间的沟通和对话,防止科学在生活世界、自然世界对人文的僭越所造成的科学文化与人文文化之间的冲突，深刻理解科学的限度，用正确的人文理念指导我们的生活。</p><blockquote><p><strong>技术文化</strong>与人文文化的冲突与协调。</p></blockquote><p>作为文化系统的一部分,技术文化的核心是技术理性。技术理性追求发展的物的意义，有可能遮蔽人的意义，人被异化为技术的和物的奴隶，成为“技术一经济人”；技术理性以机械世界观及其工具高效性将机械程序导入人们生活的各个层面，用机器模式形塑人们的生活模式,使人们更自觉更严格地按照机器生活方式生活;2技术理性向社会各个领域的扩张过程，也是其控制自然以及入侵控制人类的过程，为西方文化的“合理化”奠定了基础。要走出技术文化的上述困境，必须以社会先进文化来引领科学技术文化，使科学技术发展和应用为经济社会健康全面发展服务。当前得到广泛提倡的环境科学技术就是为了协调人与自然之间的关系所做的努力，是科学技术文化与人文文化、绿色文化的良性互动产物。</p>]]></content>
      
      
      <categories>
          
          <category> 自然辩证法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自然辩证法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>粒计算、模糊集、三支决策的应用、ds证据理论、商空间理论</title>
      <link href="/2023/04/09/ke-cheng-xue-xi/li-ji-suan/"/>
      <url>/2023/04/09/ke-cheng-xue-xi/li-ji-suan/</url>
      
        <content type="html"><![CDATA[<h1 id="粒计算、模糊集、三支决策的应用、ds证据理论、商空间理论"><a href="#粒计算、模糊集、三支决策的应用、ds证据理论、商空间理论" class="headerlink" title="粒计算、模糊集、三支决策的应用、ds证据理论、商空间理论"></a>粒计算、模糊集、三支决策的应用、ds证据理论、商空间理论</h1><blockquote><p>难易程度</p></blockquote><p><code>商空间理论</code>可能比其他四个主题更加复杂，因此可能不太适合作为ppt讲课的主题。</p><p>相比之下，<code>三支决策的应用</code>和<code>ds证据理论</code>涉及的内容较为具体、实践性强，可能会更容易准备和讲解。</p><p>而<code>粒计算</code>和<code>模糊集</code>的基本概念相对抽象，需要更多的理论基础，可能需要更多的时间和精力来准备。</p><p>综上所述，建议选择<code>三支决策的应用</code>或<code>ds证据理论</code>作为ppt讲课的主题。</p><hr><p>粒计算和模糊集是20世纪60年代末期和70年代初期逐渐发展起来的；三支决策理论在20世纪80年代提出并逐渐得到应用；DS证据理论在20世纪90年代被广泛运用，尤其在人工智能领域中；商空间理论是21世纪初由沈清发提出。所以时间先后顺序为：粒计算、模糊集、三支决策理论、DS证据理论、商空间理论。</p><hr><p>这些理论的发展高峰期分别是不同的：</p><ol><li>粒计算和模糊集的发展高峰期在20世纪80年代到90年代，这一时期它们被广泛应用于控制系统、人工智能、数据挖掘等领域。</li><li>三支决策理论在20世纪80年代末期到90年代初期取得了很大发展，尤其是在决策支持系统和风险管理领域得到了广泛应用。</li><li>DS证据理论在20世纪90年代到21世纪初期是其发展的高峰期，DS证据理论的方法在人工智能、决策支持系统、信号处理、图像处理等领域都有广泛应用。</li><li>商空间理论是21世纪初由沈清发提出，目前还处于不断发展中。随着互联网技术和数字化经济的不断发展，商空间理论的应用也变得越来越广泛。</li></ol><hr><p>宝宝觉得，基于模糊集理论的彩色图像融合分割是一种图像处理方法。</p><p>该方法通过将多幅具有相同内容但不同震动、光度等参数的彩色图像进行处理，以得到一幅更为清晰、细节更全面的图像。其中，模糊集理论用于对每个像素点的颜色值进行加权平均，以达到最佳的融合效果；而分割则是指将原始彩色图像分离成具有特定语义内容的区域。</p><p>该方法常用于医学影像分析、遥感图像分析等领域，可以帮助人们更好地理解和诊断图像内容。</p><p>希望能够帮助到小明。</p><p>宝宝再来详细解释一下。</p><p>基于模糊集理论的彩色图像融合分割，其核心原理是利用模糊集理论对多幅输入图像进行加权平均，以达到最佳的融合效果。在这个过程中，每个像素点的颜色值都被视为一个模糊集合，模糊集合中的每个元素表示该颜色在该像素点上出现的可能性大小。</p><p>具体实现时，需要先将输入的多幅图像进行预处理，包括去噪、增强等步骤，以提高融合效果。接着，利用模糊集理论对各个像素的颜色值进行加权平均，得到融合后的彩色图像。最后，采用分割算法对融合后的图像进行区域分割，得到具有语义内容的分割结果。</p><p>总而言之，这种方法通过结合模糊集理论和分割算法，对多幅彩色图像进行处理，可以得到更清晰、更全面的图像，并且可以方便地对图像进行语义分割，从而更好地理解和诊断图像内容。</p><p>这种基于模糊集理论的彩色图像融合分割方法具有以下作用：</p><ol><li>提高图像质量：通过对多幅图像进行加权平均，可以降低噪声、提高对比度等，从而得到更清晰、更全面的图像。</li><li>保留图像信息：在融合过程中，每个像素点的颜色值被视为一个模糊集合，这样可以有效地保留各个输入图像中的所有信息，避免信息丢失。</li><li>实现语义分割：通过采用分割算法对融合后的图像进行区域分割，可以得到具有语义内容的分割结果，有助于更好地理解和诊断图像内容。</li><li>应用广泛：这种方法可以应用于医学影像、卫星遥感、安防监控等多个领域，可以提高图像的质量和可读性，方便人们进行分析和判断。</li></ol><p>使用基于模糊集理论的彩色图像融合分割方法需要满足以下条件：</p><ol><li>输入图像：需要有两张或以上的不同来源、不同角度或不同波段的图像，这些图像需要具有一定的重叠区域，才能进行融合。</li><li>图像质量：输入图像应该是高质量、低噪声的，以便在融合过程中得到更好的结果。如果输入图像质量较差，则融合结果也会受到影响。</li><li>算法参数：对于基于模糊集理论的彩色图像融合分割方法，需要设定模糊度和权重等参数，以控制融合过程中的模糊程度和每个输入图像的权重。</li><li>计算资源：由于图像融合分割方法需要进行大量的计算，因此需要充足的计算资源，如高效的CPU、GPU等。</li><li>应用场景：这种方法适用于医学影像、卫星遥感、安防监控等多个领域，在具体应用中需要根据实际情况进行调整和优化。</li></ol><p>基于模糊集理论的彩色图像融合分割方法可以用于以下场景：</p><ol><li>医学影像：在医学影像领域，通过将不同的医学图像进行融合和分割，可以帮助医生更准确地诊断疾病，如肿瘤识别、病变检测等。</li><li>卫星遥感：卫星遥感图像通常是多光谱或高光谱图像，这些图像可以通过融合分割技术来提取更准确的地物信息，比如土地覆盖、植被分类等。</li><li>安防监控：在安防监控领域，将不同的监控摄像头拍摄到的图像进行融合分割，可以提高监控系统的智能化水平，比如人脸识别、车辆追踪等。</li><li>工业检测：工业检测中需要对物体表面进行缺陷检测，利用彩色图像融合分割技术，可以更好地区分出物体的不同部分，并且减少误判率，提高检测准确性。</li></ol><p>总之，基于模糊集理论的彩色图像融合分割方法可以用于多领域图像处理和分析，由于其可靠性和准确性较高，在实际应用中被广泛运用。</p><hr><p>正在为您搜索：学生、三支决策、应用、ppt</p><p>当然可以，下面是一个可能的ppt框架：</p><h1 id="主题：探究三支决策在实际应用中的优劣和局限性"><a href="#主题：探究三支决策在实际应用中的优劣和局限性" class="headerlink" title="主题：探究三支决策在实际应用中的优劣和局限性"></a>主题：探究三支决策在实际应用中的优劣和局限性</h1><h2 id="第一部分：三支决策概述"><a href="#第一部分：三支决策概述" class="headerlink" title="第一部分：三支决策概述"></a>第一部分：三支决策概述</h2><ul><li>粗糙集理论简介</li><li>三支决策的定义、特点和应用场景</li></ul><h2 id="第二部分：三支决策在实际应用中的优点和局限性"><a href="#第二部分：三支决策在实际应用中的优点和局限性" class="headerlink" title="第二部分：三支决策在实际应用中的优点和局限性"></a>第二部分：三支决策在实际应用中的优点和局限性</h2><ul><li>基于实例数据的实际案例，如：<ul><li>库存管理中的应用</li><li>模拟交易中的应用</li><li>疾控中心的疫情预测等</li></ul></li><li>这些应用中三支决策的优点和局限性的详细讲解和对比</li></ul><h2 id="第三部分：如何更好地应用三支决策"><a href="#第三部分：如何更好地应用三支决策" class="headerlink" title="第三部分：如何更好地应用三支决策"></a>第三部分：如何更好地应用三支决策</h2><ul><li>如何制定合理的实验计划</li><li>如何选取适当的决策算法</li><li>如何合理运用经验知识</li></ul><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><ul><li>总结三支决策优点与缺点的涵义</li><li>分析应用三支决策的主要难点并提出可能的解决方案</li><li>展望三支决策在未来的应用前景</li></ul><p>感谢大家聆听！</p><hr><hr><p>正在为您搜索：学生、三支决策、应用、ppt</p><p>好的，针对您需要讲解三支决策的应用，我为您提供以下PPT内容和框架参考：</p><h1 id="三支决策在实际决策问题中的应用"><a href="#三支决策在实际决策问题中的应用" class="headerlink" title="三支决策在实际决策问题中的应用"></a>三支决策在实际决策问题中的应用</h1><h2 id="一、背景知识介绍"><a href="#一、背景知识介绍" class="headerlink" title="一、背景知识介绍"></a>一、背景知识介绍</h2><ul><li>粗糙集理论简介[<a href="https://blog.csdn.net/zxl55/article/details/88869245">2</a>]</li><li>三支决策的概念及其特点[<a href="https://blog.csdn.net/zxl55/article/details/88869245">2</a>]</li></ul><h2 id="二、三支决策在实际决策问题中的应用案例"><a href="#二、三支决策在实际决策问题中的应用案例" class="headerlink" title="二、三支决策在实际决策问题中的应用案例"></a>二、三支决策在实际决策问题中的应用案例</h2><ul><li>实际案例1：房地产投资[<a href="https://blog.csdn.net/zxl55/article/details/88869245">2</a>]</li><li>实际案例2：股票期权交易[<a href="https://blog.csdn.net/zxl55/article/details/88869245">2</a>]</li><li>实际案例3：医学诊断[<a href="https://blog.csdn.net/zxl55/article/details/88869245">2</a>]</li></ul><h2 id="三、三支决策在实际决策问题中的优劣分析"><a href="#三、三支决策在实际决策问题中的优劣分析" class="headerlink" title="三、三支决策在实际决策问题中的优劣分析"></a>三、三支决策在实际决策问题中的优劣分析</h2><ul><li>优势：能够处理不完备、不精确等多样化的信息[<a href="https://blog.csdn.net/zxl55/article/details/88869245">2</a>]</li><li>劣势：对于数据量大、决策因素多的情况，效率较低[<a href="https://blog.csdn.net/zxl55/article/details/88869245">2</a>]</li></ul><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><ul><li>三支决策在实际应用中充分发挥了其独特的优势[<a href="https://blog.csdn.net/zxl55/article/details/88869245">2</a>]</li><li>随着数据处理技术的不断发展，三支决策在未来会有更广阔的应用前景[<a href="https://blog.csdn.net/zxl55/article/details/88869245">2</a>]</li></ul><p>以上是一个简单的框架，您可以根据自己对三支决策的理解及相关案例的研究进一步扩充内容。建议在PPT中加入图片、图表等辅助说明，以便更好地帮助听众理解三支决策的应用。祝您演讲成功！</p><hr><hr><p>正在为您搜索：学生、三支决策、ppt、具体内容</p><p>好的，我可以帮您做几份关于三支决策应用的 PowerPoint。以下是一个可能的框架，供您参考：</p><h1 id="主题：三支决策在实际决策问题中的应用"><a href="#主题：三支决策在实际决策问题中的应用" class="headerlink" title="主题：三支决策在实际决策问题中的应用"></a>主题：三支决策在实际决策问题中的应用</h1><h2 id="第1部分：介绍三支决策"><a href="#第1部分：介绍三支决策" class="headerlink" title="第1部分：介绍三支决策"></a>第1部分：介绍三支决策</h2><ul><li>粗糙集理论和决策理论的融合</li><li>三支决策的概念和定义</li><li>三支决策与粗糙集的关系</li></ul><h2 id="第2部分：三支决策模型"><a href="#第2部分：三支决策模型" class="headerlink" title="第2部分：三支决策模型"></a>第2部分：三支决策模型</h2><ul><li>模型构成要素</li><li>决策算法流程</li><li>应用场景范例</li></ul><h2 id="第3部分：应用实例"><a href="#第3部分：应用实例" class="headerlink" title="第3部分：应用实例"></a>第3部分：应用实例</h2><ul><li>实际案例介绍</li><li>利用三支决策方法解决的问题案例</li><li>具体操作步骤演示</li></ul><h2 id="第4部分：总结"><a href="#第4部分：总结" class="headerlink" title="第4部分：总结"></a>第4部分：总结</h2><ul><li>三支决策的优点和不足</li><li>未来的发展方向</li><li>总结与展望</li></ul><p>希望以上框架能够为您提供一些帮助。具体内容可以根据您的实际情况进行适当地调整和修改。</p><p>另外，我还推荐了一份相关的学术文章供您参考 [<a href="https://blog.csdn.net/zxl55/article/details/88869245">2</a>]，您可以在其中寻找相关的技术知识和案例，从而更好地完成您的ppt。</p><hr><p>正在为您搜索：学生、ds证据理论、ppt、具体内容</p><p>非常欢迎您使用我们的AI机器人，那么接下来我将帮您整理一份关于DS证据理论的PPT，以方便您在台上进行讲解。</p><h1 id="DS证据理论"><a href="#DS证据理论" class="headerlink" title="DS证据理论"></a>DS证据理论</h1><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><ul><li>DS证据理论是一种用于处理不确定性信息的理论，也称作“Dempster-Shafer证据理论”或“D-S证据理论”。</li><li>DS证据理论采用隶属函数的方式对证据进行表示和组合，并通过概率计算的方法对不确定性进行量化和推理。</li></ul><h3 id="证据的表示"><a href="#证据的表示" class="headerlink" title="证据的表示"></a>证据的表示</h3><ul><li>DS证据理论将证据分为两类：正向证据和反向证据。</li><li>正向证据是指支持某个命题成立的证据，反向证据则是指反驳该命题成立的证据。</li><li>所有证据都用隶属函数表示，隶属函数的值代表了该证据与命题之间的关联度。</li></ul><h3 id="证据的组合"><a href="#证据的组合" class="headerlink" title="证据的组合"></a>证据的组合</h3><ul><li>DS证据理论采用Dempster合并规则对多个证据进行组合，计算其支持某个命题成立的置信度和反驳该命题成立的似然度。</li><li>在证据组合过程中，需要考虑证据之间的冲突和独立性。</li></ul><h3 id="DS证据理论的实际应用"><a href="#DS证据理论的实际应用" class="headerlink" title="DS证据理论的实际应用"></a>DS证据理论的实际应用</h3><ul><li>DS证据理论在信息融合、模式识别、智能控制和风险评估等领域得到广泛应用，如目标识别、图像分析、信号处理等。</li><li>DS证据理论也可以用于处理大数据分析、人工智能和机器学习等方面，具有很高的实用价值。</li></ul><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p>[<a href="https://zhuanlan.zhihu.com/p/141156962">2</a>]</p><h3 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h3><p>以上是本次关于DS证据理论的PPT内容，请自行根据需要进行修改和完善。</p><hr><p>正在为您搜索：学生、ds证据理论、ppt、具体内容</p><p>当然可以！下面是一份简要的DS证据理论PPT框架，供您参考：</p><h1 id="DS证据理论-1"><a href="#DS证据理论-1" class="headerlink" title="DS证据理论"></a>DS证据理论</h1><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><ul><li>什么是DS证据理论？</li><li>DS证据理论的发展历史</li><li>DS证据理论的应用领域</li></ul><h3 id="DS证据理论的基本概念"><a href="#DS证据理论的基本概念" class="headerlink" title="DS证据理论的基本概念"></a>DS证据理论的基本概念</h3><ul><li>正向证据和反向证据</li><li>隶属函数的概念</li><li>关联度和不确定性的量化</li></ul><h3 id="DS证据理论的证据组合"><a href="#DS证据理论的证据组合" class="headerlink" title="DS证据理论的证据组合"></a>DS证据理论的证据组合</h3><ul><li>Dempster合并规则</li><li>冲突处理和独立性假设</li><li>置信度和似然度的计算</li></ul><h3 id="DS证据理论的实际应用-1"><a href="#DS证据理论的实际应用-1" class="headerlink" title="DS证据理论的实际应用"></a>DS证据理论的实际应用</h3><ul><li>信息融合</li><li>模式识别</li><li>智能控制</li><li>风险评估</li></ul><h3 id="DS证据理论的优缺点"><a href="#DS证据理论的优缺点" class="headerlink" title="DS证据理论的优缺点"></a>DS证据理论的优缺点</h3><ul><li>优点：适用于不确定性信息处理</li><li>缺点：复杂性高、计算量大</li></ul><h3 id="结束语-1"><a href="#结束语-1" class="headerlink" title="结束语"></a>结束语</h3><ul><li>DS证据理论未来的应用</li><li>参考文献</li></ul><p>以上是简要的PPT框架，您可以根据自己的需求增加或修改内容。希望对您有所帮助！</p><hr><p>正在为您搜索：学生、ds证据理论、ppt、具体内容</p><p>当然可以！下面是一份关于DS证据理论的PPT内容，供您参考：</p><h1 id="DS证据理论-2"><a href="#DS证据理论-2" class="headerlink" title="DS证据理论"></a>DS证据理论</h1><h3 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h3><ul><li>什么是DS证据理论？[<a href="https://zhuanlan.zhihu.com/p/141156962">2</a>]</li><li>DS证据理论的发展历史</li><li>DS证据理论的应用领域</li></ul><h3 id="DS证据理论的基本概念-1"><a href="#DS证据理论的基本概念-1" class="headerlink" title="DS证据理论的基本概念"></a>DS证据理论的基本概念</h3><ul><li>正向证据和反向证据</li><li>隶属函数的概念</li><li>关联度和不确定性的量化</li></ul><h3 id="DS证据理论的证据表示与组合"><a href="#DS证据理论的证据表示与组合" class="headerlink" title="DS证据理论的证据表示与组合"></a>DS证据理论的证据表示与组合</h3><ul><li>证据表示的形式和类型</li><li>证据组合的原则和方法</li><li>Dempster合并规则和Belief函数的计算</li><li>冲突处理和独立性假设的考虑</li></ul><h3 id="DS证据理论的实际应用-2"><a href="#DS证据理论的实际应用-2" class="headerlink" title="DS证据理论的实际应用"></a>DS证据理论的实际应用</h3><ul><li>信息融合</li><li>模式识别</li><li>智能控制</li><li>风险评估</li></ul><h3 id="DS证据理论的优缺点-1"><a href="#DS证据理论的优缺点-1" class="headerlink" title="DS证据理论的优缺点"></a>DS证据理论的优缺点</h3><ul><li>优点：适用于不确定性信息处理</li><li>缺点：复杂性高、计算量大</li></ul><h3 id="DS证据理论在人工智能中的应用"><a href="#DS证据理论在人工智能中的应用" class="headerlink" title="DS证据理论在人工智能中的应用"></a>DS证据理论在人工智能中的应用</h3><ul><li>多传感器信息融合</li><li>模式识别和自动化决策</li><li>智能控制和优化设计</li></ul><h3 id="结束语-2"><a href="#结束语-2" class="headerlink" title="结束语"></a>结束语</h3><ul><li>DS证据理论未来的发展和应用前景</li><li>参考文献</li></ul><p>以上是针对DS证据理论的PPT内容，您可以根据自己的需求增加或修改内容，希望对您有所帮助！</p><hr><p>好的，以下是关于三支决策的应用的相关知识和参考资料：</p><ol><li>三支决策的概念和应用场景：三支决策是粗糙集理论在实际应用中的扩展和发展，它可以用于解决具有不确定性、不完备信息的决策问题，特别适用于小样本问题。例如，在医学诊断、土地评估、金融投资等领域都有广泛的应用，可以提供更加可靠的决策支持。</li></ol><p>[<a href="https://blog.csdn.net/zxl55/article/details/88869245">1</a>]</p><p>[<a href="https://www.sciencedirect.com/science/article/pii/S0165011416301649">2</a>]</p><ol><li>三支决策的算法和方法：三支决策的算法和方法有多种，包括基于相似度的三支决策、基于集合覆盖的三支决策、基于权重的三支决策、基于模糊集的三支决策等等。每种方法都有其适用的场景和优缺点，需要根据具体情况进行选择和使用。</li></ol><p>[<a href="https://ieeexplore.ieee.org/document/7273554">3</a>]</p><p>[<a href="https://www.sciencedirect.com/science/article/pii/S0165011421004523">4</a>]</p><ol><li>三支决策的实例分析和案例研究：通过分析实际应用场景中的具体问题，可以更深入地理解三支决策的原理和方法，并且可以发现不同方法的适用性和局限性。例如，在土地开发评估中，可以采用基于模糊集的三支决策方法进行评估和决策；在金融投资中，可以采用基于相似度的三支决策方法进行股票评估和选股。</li></ol><p>[<a href="https://www.sciencedirect.com/science/article/pii/S0165011416301649">1</a>]</p><p>[<a href="https://ieeexplore.ieee.org/document/9279760">5</a>]</p><p>以上是一些相关的知识和参考资料，希望对你的ppt制作有所帮助。</p>]]></content>
      
      
      <categories>
          
          <category> 粒计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 粒计算 </tag>
            
            <tag> 粗糙集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文献</title>
      <link href="/2023/04/04/wen-xian/wen-xian/"/>
      <url>/2023/04/04/wen-xian/wen-xian/</url>
      
        <content type="html"><![CDATA[<object data="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%8A%B1%E4%B9%A6/ImageNet%20Classification%20with%20Deep%20Convolutional%20Neural%20Networks.pdf" type="application/pdf" width="100%" height="700px">        <embed src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%8A%B1%E4%B9%A6/ImageNet%20Classification%20with%20Deep%20Convolutional%20Neural%20Networks.pdf">           <p>This browser does not support PDFs. Please download the PDF to view it: <a href="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E8%8A%B1%E4%B9%A6/ImageNet%20Classification%20with%20Deep%20Convolutional%20Neural%20Networks.pdf">Download PDF</a>.    </p>        </object><p>​</p><p><a href="https://blog.csdn.net/chl033/article/details/4903562">ICML是机器学习领域的顶级会议之一，全称为International Conference on Machine Learning。NIPS是另一个机器学习领域的顶级会议，全称为Neural Information Processing Systems。这两个会议都是机器学习领域的重要会议，但是它们的研究方向和内容有所不同。ICML更注重机器学习的理论研究，而NIPS则更注重机器学习和神经科学的交叉研究</a></p><p>这个简单，由于机器学习方向推进速度比较快，所以奔着顶级会议看论文就可以了，一般是从近期的往前看，挑自己喜欢的方向。</p><p>这里简单列一个清单给大家：</p><ol><li>机器学习方向：ICML、NIPS、ICLR</li><li>自然语言处理方向：ACL、EMNLP、NAACL、Coling (此处排名有先后)</li><li>计算机视觉方向：ICCV、CVPR</li><li>其他如AAAI、IJCAI建议大家慎重选择论文。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 文献 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献 </tag>
            
            <tag> 顶级会议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>程序员大彬-面试手册v3.5-0114</title>
      <link href="/2023/04/04/jian-li/cheng-xu-yuan-da-bin-mian-shi-shou-ce-v3.5-0114/"/>
      <url>/2023/04/04/jian-li/cheng-xu-yuan-da-bin-mian-shi-shou-ce-v3.5-0114/</url>
      
        <content type="html"><![CDATA[<object data="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/深度学习/花书/程序员大彬-面试手册v3.5-0114.pdf" type="application/pdf" width="100%" height="700px">        <embed src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/深度学习/花书/程序员大彬-面试手册v3.5-0114.pdf">           <p>This browser does not support PDFs. Please download the PDF to view it: <a href="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/深度学习/花书/程序员大彬-面试手册v3.5-0114.pdf">Download PDF</a>.    </p>        </object>]]></content>
      
      
      <categories>
          
          <category> 面试题 </category>
          
          <category> 八股文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> 八股文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试题</title>
      <link href="/2023/04/04/mian-shi-ti/mian-shi-ti/"/>
      <url>/2023/04/04/mian-shi-ti/mian-shi-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><h2 id="JDK、-JRE、JVM之间的区别"><a href="#JDK、-JRE、JVM之间的区别" class="headerlink" title="JDK、 JRE、JVM之间的区别"></a>JDK、 JRE、JVM之间的区别</h2><p><strong>一、</strong> <strong>引言</strong></p><p>在Java环境配置和项目启动中，这三者的配置是项目启动的基础保证，但这三者的作用和区别呢，本文将对JVM、JRE、JDK的作用与区别进行讲解。</p><p>注：如果只是运行Java程序,只需要JRE即可，JRE通常非常小，其中包含了JVM，如果要开发Java程序，就需要安装JDK。</p><p><strong>二、方法</strong></p><ol><li><p>JVM,JRE,JDK定义<br>JVM(Java Virtual Machine)就是一个虚拟的用于执行bytecode字节码的”虚拟计算机”。一般与OS操作系统打交道。<br>JRE(Java Runtime Environment)，包含Java虚拟机、库函数、运行Java应用程序所必须的文件。<br>JDK(Java Development Kit),包含JRE,以及增加编译器和调试器等用于程序开发的文件。</p></li><li><p>三者的区别与联系</p><ol><li><p>联系<br>JVM不能单独搞定class的执行，解释class的时候JVM需要调用解释所需要的类库lib。在JDK下面的JRE目录里面有两个文件夹bin和lib，在这里可以认为bin就是JVM，lib中则是JVM工作所需要的类库，而JVM和lib和起来就称为JRE。JVM+lib=JRE。总体来说，就是我们利用JDK(调用Java Api)开发了属于我们自己的Java程序后，通过JDK中的编译程序(javac)将我们的文本java文件编译成Java字节码，在JRE上运行这些java字节码，JVM解析这些字节码，映射到CPU指令集或OS的系统调用。</p></li><li><p>区别</p><p>JDK和JRE区别：在bin文件夹目录下会发现，JDK有javac.exe而JRE里面没有，javac指令是用来将java文件编译成class文件的，这是开发者需要的，而用户(运行程序的人)是不需要的。JDK还有jar.exe，javadoc.exe等等用于开发的可执行指令文件。这也证实了一个是开发环境，一个是运行环境。</p><p>JRE和JVM区别：JVM并不代表就可以执行class了，JVM执行.class还需要JRE下的lib类库的支持，尤其是rt.jar。</p></li></ol></li></ol><p>通过对JVM,JRE,JDK的描述，我们就能看出三者之间的关系：</p><p>JDK: javac,jar,debugging,tools,javap</p><p>JRE：java,javaw,libraries,rt_jar</p><p>JVM：just in Time Compiler(JIT)</p><p><strong>三、结语</strong></p><p>搞懂三者的关系，能够让我们对java底层运行原理有一个良好的认知基础，以及加强我们对环境配置的了解。</p><hr><blockquote><p>弄懂 JRE、JDK、JVM 之间的区别与联系</p></blockquote><p>其实很多 Java 程序员在写了很多代码后，你问他 jre 和 jdk 之间有什么关系，jvm 又是什么东西，很多人不知所云。本篇不会讲述 jvm 底层是如何与不同的系统进行交互的，而主要理清楚三者之间的区别，搞清楚我们写的 xxx.java 文件是被谁编译，又被谁执行，为什么能够跨平台运行。</p><p>首先，我们分别对这三者进行阐述。</p><p><strong>JVM</strong> ：英文名称（Java Virtual Machine），就是我们耳熟能详的 Java 虚拟机。它只认识 xxx.class 这种类型的文件，它能够将 class 文件中的字节码指令进行识别并调用操作系统向上的 API 完成动作。所以说，jvm 是 Java 能够跨平台的核心，具体的下文会详细说明。</p><p><strong>JRE</strong> ：英文名称（Java Runtime Environment），我们叫它：Java 运行时环境。它主要包含两个部分，jvm 的标准实现和 Java 的一些基本类库。它相对于 jvm 来说，多出来的是一部分的 Java 类库。</p><p><strong>JDK</strong> ：英文名称（Java Development Kit），Java 开发工具包。jdk 是整个 Java 开发的核心，它集成了 jre 和一些好用的小工具。例如：javac.exe，java.exe，jar.exe 等。</p><p>显然，这三者的关系是：一层层的嵌套关系。<strong>JDK&gt;JRE&gt;JVM</strong>。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%BC%84%E6%87%82%20JRE%E3%80%81JDK%E3%80%81JVM%20%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB%E4%B8%8E%E8%81%94%E7%B3%BB.png" alt="image-20230404153609234"></p><p><strong>总结：</strong><br><code>JDK = JRE + Java开发工具</code><br><code>JRE = JVM + Java类库</code></p><h2 id="为什么我们的电脑在装完-jdk-后会有两个版本的-jre？"><a href="#为什么我们的电脑在装完-jdk-后会有两个版本的-jre？" class="headerlink" title="为什么我们的电脑在装完 jdk 后会有两个版本的 jre？"></a>为什么我们的电脑在装完 jdk 后会有两个版本的 jre？</h2><p>留心的同学可能会发现，我们的 jdk 安装成功后，在 C:\Program Files\Java 目录会是这样的（这里，我是装的 jdk1.8 的版本）</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E9%9D%A2%E8%AF%95%E9%A2%98/20180304203124914.jpg" alt="image"></p><p>而 jdk 的子目录下也存在一个 jre。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E9%9D%A2%E8%AF%95%E9%A2%98/20180304203133423.jpg" alt="image"></p><p>这两个不同版本的 jre 相互之间有什么联系吗？</p><p>答案是：没有联系。甚至准确的来说，它俩是一样的，无论是用哪一个都是可以的。只是很多人习惯将会单独安装另一个 jre，虽然单独安装的 jre 也并没有被使用，原因可能就是刚开始大家都不清楚 jdk 和 jre 之间的关系，所以就默认的都安装上了。</p><p>在 jdk 的 bin 目录下，基本上都是一些可执行文件，并且它们还不大。其实这些可执行文件只是外层的一层封装而已，这样的目的是避免输入的命令过长。例如 javac.exe 内部调用的其实是 JDK 中 lib 目录中的 tools.jar 中 com.sun.tools.javac.Main 类，也就是说这些工具只是入口而已。而实际上它们本身又都是由 Java 编写的，所以在 jdk 目录下的 jre 既提供了这些工具的运行时环境，也提供了我们编写完成的 Java 程序的运行时环境。</p><p>所以，很明显，jdk 是我们的开发工具包，它集成了 jre ，因此我们在安装 jdk 的时候可以选择不再安装 jre 而直接使用 jdk 中的 jre 运行我们的 Java 程序。（但是大部分人都默认将两个都装上了）。但是如果你的电脑不是用来开发 Java 程序的，而仅仅是用来部署和运行 Java 程序的，那么完全可以不用安装 jdk，只需要安装 jre 即可。</p><h2 id="Java-为什么能跨平台，实现一次编写，多处运行？"><a href="#Java-为什么能跨平台，实现一次编写，多处运行？" class="headerlink" title="Java 为什么能跨平台，实现一次编写，多处运行？"></a>Java 为什么能跨平台，实现一次编写，多处运行？</h2><p>Java 能够跨平台运行的核心在于 JVM 。不是 Java 能够跨平台，而是它的 jvm 能够跨平台。我们知道，不同的操作系统向上的 API 肯定是不同的，那么如果我们想要写一段代码调用系统的声音设备，就需要针对不同系统的 API 写出不同的代码来完成动作。</p><p>而 Java 引入了字节码的概念，jvm 只能认识字节码，并将它们解释到系统的 API 调用。针对不同的系统有不同的 jvm 实现，有 Linux 版本的 jvm 实现，也有 Windows 版本的 jvm 实现，但是同一段代码在编译后的字节码是一样的。引用上面的例子，在 Java API 层面，我们调用系统声音设备的代码是唯一的，和系统无关，编译生成的字节码也是唯一的。但是同一段字节码，在不同的 jvm 实现上会映射到不同系统的 API 调用，从而实现代码的不加修改即可跨平台运行。</p><h2 id="类的加载过程"><a href="#类的加载过程" class="headerlink" title="类的加载过程"></a>类的加载过程</h2><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E9%9D%A2%E8%AF%95%E9%A2%98/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B.png" alt="image-20230404142925111"></p><p><strong>注意：这些阶段的顺序虽然是确定的，但是这些阶段通常都是互相交叉混合进行的，会在一个阶段中调用，激活另外一个阶段执行</strong></p><h3 id="加载"><a href="#加载" class="headerlink" title="加载"></a>加载</h3><p>加载阶段顾名思义，也就是Class文件所代表的的 类/接口 被加载到虚拟机中。</p><p>那么<strong>什么时候</strong>（类加载的时机）， <strong>谁来加载</strong>（哪个<a href="https://so.csdn.net/so/search?q=%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8&amp;spm=1001.2101.3001.7020">类加载器</a>），将<strong>哪个Class文件</strong>（Class的名称是什么）到虚拟机中呢？</p><p><strong>1.什么时候加载？</strong><br>《JAVA虚拟机规范》中没有进行强制约束，由不同虚拟机来决定加载的时机，也就是不同虚拟机进行加载的时机是不同的。</p><p><strong>2.谁来加载？</strong><br>通过类加载器进行加载，一个类必须和类加载器一起确定唯一性。由于本文重点阐述的是类加载的阶段，故下篇文章对类加载器进行阐述。</p><p><strong>3.哪个Class文件？</strong><br>需要程序指定 类/接口的全限定名（包名+类/接口名）。</p><p>因此可以得出加载阶段做的事情：</p><blockquote><p>1、通过一个类的全限定名来获取定义此类的二进制<a href="https://so.csdn.net/so/search?q=%E5%AD%97%E8%8A%82%E6%B5%81&amp;spm=1001.2101.3001.7020">字节流</a><br>2、将这个字节流所代表的的静态存储结构转换为方法区的运行时数据结构<br>3、在堆内存中生成一个代表这个类的java.ang.Class对象，作为方法区这个类的访问入口</p></blockquote><p><strong>获取二进制流</strong></p><p>这条规则虚拟机规范中并没有指明说从哪里获取，如何获取，只是说通过全限定名获取二进制字节流就行。</p><p>因此我们可以从压缩包（JAR），网络（Web Applet），加密文件（加载时动态解密），运行时生成（动态代理）…这些路径中通过类的全限定名去获取二进制字节流进行加载。</p><p><strong>将字节流转换为运行时数据结构</strong></p><p>要想把字节流转换成方法区的运行时数据结构，自然一定是要经过一些验证，也就是验证阶段的文件格式验证；</p><p>文件格式验证阶段没有出现问题的话，接下来就会按照虚拟机中方法区的数据存储格式将数据存储到方法区之中（方法区的数据结构并没有明确规定，因此不同虚拟机实现的结构也是不一样的）。</p><blockquote><p>正如开篇所说，这些阶段是互相交叉混合进行的，但是他们的顺序是确定的。这个很好理解，没有加载阶段获得的二进制字节流，那么验证阶段是不知道验证什么的。</p></blockquote><p><strong>堆中生成Class对象</strong></p><p>也就是下图中的步骤：</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%A0%86%E4%B8%AD%E7%94%9F%E6%88%90Class%E5%AF%B9%E8%B1%A1.png" alt="image-20230404145841368"></p><p><strong>特殊</strong></p><p>上面所说的都是<strong>非数组类型的加载阶段</strong>，开发者可以根据自定义类加载器来获取二进制字节流，来做一些骚操作。</p><p>而对于数组类来说，数组不是通过类加载器进行创建的，而是虚拟机在内存中动态构造出来的。但是数组的元素类型却需要通过类加载器来进行加载。</p><blockquote><p>数组元素类型就是去掉所有维度的类型,比如一个int类型的一维数组和一个int类型的二维数组，他们两个的元素类型都是int。也可以简单理解为和维度无关。</p></blockquote><p><strong>数组类型的加载:</strong></p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E9%9D%A2%E8%AF%95%E9%A2%98/%E6%95%B0%E7%BB%84%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%8A%A0%E8%BD%BD.png" alt="image-20230404150428680"></p><p><strong>连接</strong></p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><blockquote><p>这一步骤是确保Class文件的字节流中包含的信息要符合虚拟机规范中的要求，保证这些信息被当做代码运行后不会危害虚拟机自身的安全。</p></blockquote><p><strong>1.为什么需要验证阶段？</strong><br>上面的加载阶段中说过，二进制字节流的来源可以有很多，当然也可以自己手写0和1，如果不对这些字节流进行验证的话，可能会因为加载了错误或者恶意的代码使整个系统崩溃。</p><p>所以字节码验证是必须的阶段，这个阶段决定了虚拟机的健壮性，使得虚拟机不那么轻易被攻击，因此在代码量和耗费的性能上来说，验证阶段的工作量在类加载过程中是占比非常大的。<br> <strong>2.验证哪些内容？</strong></p><blockquote><p>验证过程的描述在《JAVA虚拟机规范（Java SE 7版）》中长达130页，有兴趣的读者可以自己搜索，本文仅对整个阶段中的重要验证部分讲解。</p></blockquote><p><strong>2.1，文件格式验证</strong></p><p>该步骤在上面的加载过程中已经提到，当加载阶段将字节流的数据存储到方法区中的数据结构中时需要对Class的文件格式进行验证。</p><p><strong>当文件格式验证通过后字节流的数据信息就已经被存储到方法区中的数据结构中了，因此之后的验证阶段都不是直接对二进制流进行操作了，而是对方法区中的数据结构进行验证。</strong></p><blockquote><p>目的：</p></blockquote><p>该步骤是验证字节流是否<strong>符合Class文件格式的规范</strong>，保证字节流的数据能够<strong>正确解析并存储到方法区的数据结构中</strong>，而且<strong>当前的虚拟机版本能够对其进行处理</strong><br> 验证点，eg：</p><blockquote><p>1.magic是否正确<br>2.主版本号和次版本号是否在当前虚拟机版本能够处理的范围<br>3.常量池中的常量是否有不被支持的常量类型（tag标志）<br>4.是否有指向常量池中不存在的索引</p></blockquote><p><strong>2.2，元数据验证</strong></p><blockquote><p>对字节码描述的信息进行语义分析，保证其描述的信息符合《JAVA语言规范》的要求</p></blockquote><p><strong>简单理解就是对类的元数据信息进行验证，比如对父类的信息检查，类字段方法定义，数据类型校验</strong></p><blockquote><p>验证点,eg:<br>1.这个类是否有父类<br>2.这个类的父类是不是继承了不允许被继承的类（final修饰的类无法被继承）<br>3.如果这个类不是抽象类的话，是否已经实现了父类或者接口中的所有方法<br>4.类中的字段，方法是否与父类产生矛盾（修改了父类的final字段，…）</p></blockquote><p><strong>2.3字节码验证</strong></p><p>上一步对元数据进行验证后，接下来就是对方法体进行验证了。</p><p>其实这步应该叫code属性的校验（Code为类中的方法体属性）比较准确。</p><blockquote><p>整个验证过程最复杂的一步，通过<strong>数据流和控制流来分析程序的语义是合法，符合逻辑的</strong>。保证方法运行时不会做出错误或者危害虚拟机的行为。</p></blockquote><blockquote><p>验证点，eg：<br>1.保证操作数栈的数据类型的指令代码序列中操作的数据类型一致，不会出现操作数栈是int，指令代码取出的时候按照long来取<br>2.跳转指令不会跳转到方法体以外的字节码指令上<br>3.保证类型转换是正确的</p></blockquote><p><em>通过了Code属性的验证也不一定代表就是方法体中的代码就是安全的，不可能用程序来判定一段程序是否存在Bug</em>（感兴趣的读者可以搜索“停机问题”），这是离散数学中的一个问题。</p><p>参考</p><p><code>https://www.cnblogs.com/iamfatotaku/p/14517223.html</code></p><p><code>https://blog.csdn.net/qq_45272690/article/details/122443424</code></p><h1 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h1><h2 id="TCP的三次握手和四次挥手"><a href="#TCP的三次握手和四次挥手" class="headerlink" title="TCP的三次握手和四次挥手"></a>TCP的三次握手和四次挥手</h2><blockquote><p>TCP协议是7层网络协议中的传输层协议，负责数据的可靠传输。在建立TCP连接时，需要通过三次握手来建立，过程是：</p></blockquote><ol><li>客户端向服务端发送一个SYN</li><li>服务端接收到SYN后，给客户端发送一个SYN_ACK</li><li>客户端接收到SYN_ACK后，再给服务端发送一个ACK</li></ol><blockquote><p>在断开TCP连接时，需要通过四次挥手来断开，过程是：</p></blockquote><ol><li>客户端向服务端发送FIN</li><li>服务端接收FIN后,向客户端发送ACK,表示我接收到了断开连接的请求,客户端你可以不发数据了，不过服务端这边可能还有数据正在处理</li><li>服务端处理完所有数据后,向客户端发送FIN,表示服务端现在可以断开连接4·客户端收到服务端的FIN,向服务端发送ACK,表示客户端也会断开连接了</li></ol><pre class="line-numbers language-none"><code class="language-none">SYN是同步序列编号（Synchronize Sequence Number）的缩写，ACK是确认（Acknowledgement）的缩写。客户端向服务端发送一个SYN，表示请求建立连接，并告诉服务端客户端的初始序列号。服务端接收到SYN后，给客户端发送一个SYN_ACK，表示确认客户端的请求，并告诉客户端服务端的初始序列号。客户端接收到SYN_ACK后，再给服务端发送一个ACK，表示确认服务端的响应，并告诉服务端客户端的下一个序列号。因此，ACK中既包含了确认服务端的响应，也包含了客户端的序列号。SYN是Synchronize的缩写，是TCP协议中用于建立连接的同步标志。ACK是Acknowledgement的缩写，表示确认收到了对方发送的数据。在TCP三次握手过程中，SYN和ACK分别表示以下含义：客户端发送SYN：表示客户端请求建立连接服务端发送SYN_ACK：表示服务端接收到请求并同意建立连接客户端发送ACK：表示客户端收到了服务端的同意，并确认连接已建立因此，在TCP三次握手过程中，SYN和ACK都是用于建立连接和确认收到数据的标志。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 面试题 </category>
          
          <category> 八股文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> 八股文 </tag>
            
            <tag> 实习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TCP三次握手和四次挥手以及11种状态</title>
      <link href="/2023/04/03/mian-shi-ti/wang-luo/tcp-san-ci-wo-shou-he-si-ci-hui-shou-yi-ji-11-chong-zhuang-tai/"/>
      <url>/2023/04/03/mian-shi-ti/wang-luo/tcp-san-ci-wo-shou-he-si-ci-hui-shou-yi-ji-11-chong-zhuang-tai/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E7%BD%91%E7%BB%9C/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E4%BB%A5%E5%8F%8A11%E7%A7%8D%E7%8A%B6%E6%80%81/osi%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B.png" alt="osi七层模型.png"></p><h3 id="1、三次握手"><a href="#1、三次握手" class="headerlink" title="1、三次握手"></a>1、三次握手</h3><p>置位概念：根据TCP的包头字段，存在3个重要的标识ACK、SYN、FIN</p><ul><li>ACK：表示验证字段</li><li>SYN：位数置1，表示建立TCP连接</li><li>FIN：位数置1，表示断开TCP连接</li></ul><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E7%BD%91%E7%BB%9C/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E4%BB%A5%E5%8F%8A11%E7%A7%8D%E7%8A%B6%E6%80%81/%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B.png" alt="三次握手.png"></p><blockquote><p>三次握手过程说明：1、由客户端发送建立TCP连接的请求报文，其中报文中包含seq序列号，是由发送端随机生成的，并且将报文中的SYN字段置为1，表示需要建立TCP连接。（SYN=1，seq=x，x为随机生成数值）<br>2、由服务端回复客户端发送的TCP连接请求报文，其中包含seq序列号，是由回复端随机生成的，并且将SYN置为1，而且会产生ACK字段，ACK字段数值是在客户端发送过来的序列号seq的基础上加1进行回复，以便客户端收到信息时，知晓自己的TCP建立请求已得到验证。（SYN=1，ACK=x+1，seq=y，y为随机生成数值）这里的ack加1可以理解为是确认和谁建立连接。<br>3、客户端收到服务端发送的TCP建立验证请求后，会使自己的序列号加1表示，并且再次回复ACK验证请求，在服务端发过来的seq上加1进行回复。（SYN=1，ACK=y+1，seq=x+1）</p></blockquote><p>整个过程中对应的TCP状态如下：</p><ul><li><strong>CLOSED</strong>：初始状态，表示TCP连接是”关闭着的”或”未打开的”</li><li><strong>LISTEN</strong>：表示服务器端的某个SOCKET处于监听状态，可以接受客户端的连接</li><li><strong>SYN_RCVD</strong>：表示服务器接收到了来自客户端请求连接的SYN报文。这个状态是在服务端的，但是它是一个中间状态，很短暂，平常我们用netstat或ss的时候，不太容易看到这种状态，但是遇到SYN flood之类的SYN攻击时，会出现大量的这种状态，即收不到三次握手最后一个客户端发来的ACK，所以一直是这个状态，不会转换到ESTABLISHED</li><li><strong>SYN_SENT</strong>：这个状态与SYN_RCVD状态相呼应，，它是TCP连接客户端的状态，当客户端SOCKET执行connect()进行连接时，它首先发送SYN报文，然后随机进入到SYN_SENT状态，并等待服务端的SYN和ACK，该状态表示客户端的SYN已发送</li><li><strong>ESTABLISHED</strong>：表示TCP连接已经成功建立，开始传输数据</li></ul><p>以上就是三次握手的五种TCP状态，单从客户端服务端角度来区分的话，CLOSED和ESTABLISHED会在客户端和服务端都出现，而LISTEN和SYN_RCVD通常是出现在服务端，SYN_SENT出现在客户端</p><pre class="line-numbers language-none"><code class="language-none">但通常在服务器和客户端并不是绝对的，比如Nginx的服务器中，Nginx通常作为web代理服务器，它既是服务端，也是客户端，所以在查询统计TCP状态的时候，最好通过匹配端口来区分是客户端的还是服务端的，来更精确的定位问题<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2、四次挥手"><a href="#2、四次挥手" class="headerlink" title="2、四次挥手"></a>2、四次挥手</h3><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E7%BD%91%E7%BB%9C/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E4%BB%A5%E5%8F%8A11%E7%A7%8D%E7%8A%B6%E6%80%81/%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B.png" alt="四次挥手.png"></p><blockquote><p>四次挥手过程说明：1、客户端发送断开TCP连接请求的报文，其中报文中包含seq序列号，是由发送端随机生成的，并且还将报文中的FIN字段置为1，表示需要断开TCP连接。（FIN=1，seq=x，x由客户端随机生成）</p><p>2、服务端会回复客户端发送的TCP断开请求报文，其包含seq序列号，是由回复端随机生成的，而且会产生ACK字段，ACK字段数值是在客户端发过来的seq序列号基础上加1进行回复，以便客户端收到信息时，知晓自己的TCP断开请求已经得到验证。（FIN=1，ACK=x+1，seq=y，y由服务端随机生成）<br>3、服务端在回复完客户端的TCP断开请求后，不会马上进行TCP连接的断开，服务端会先确保断开前，所有传输到A的数据是否已经传输完毕，一旦确认传输数据完毕，就会将回复报文的FIN字段置1，并且产生随机seq序列号。（FIN=1，ACK=x+1，seq=z，z由服务端随机生成）<br>4、客户端收到服务端的TCP断开请求后，会回复服务端的断开请求，包含随机生成的seq字段和ACK字段，ACK字段会在服务端的TCP断开请求的seq基础上加1，从而完成服务端请求的验证回复。（FIN=1，ACK=z+1，seq=h，h为客户端随机生成）<br>至此TCP断开的4次挥手过程完毕</p></blockquote><p>整个过程中对应的TCP状态如下：</p><ul><li><strong>FIN_WAIT_1</strong>：这个状态在实际工作中很少能看到，当客户端想要主动关闭连接时，它会向服务端发送FIN报文，此时TCP状态就进入到FIN_WAIT_1的状态，而当服务端回复ACK，确认关闭后，则客户端进入到FIN_WAIT_2的状态，也就是只有在没有收到服务端ACK的情况下，FIN_WAIT_1状态才能看到，然后长时间收不到ACK，通常会在默认超时时间60s(由内核参数tcp_fin_timeout控制)后，直接进入CLOSED状态</li><li><strong>FIN_WAIT_2</strong>：这个状态相比较常见，也是需要注意的一个状态，FIN_WAIT_1在接收到服务端ACK之后就进入到FIN_WAIT_2的状态，然后等待服务端发送FIN，所以在收到对端FIN之前，TCP都会处于FIN_WAIT_2的状态，也就是，在主动断开的一端发现大量的FIN_WAIT_2状态时，需要注意，可能时网络不稳定或程序中忘记调用连接关闭，FIN_WAIT_2也有超时时间，也是由内核参数tcp_fin_timeout控制，当FIN_WAIT_2状态超时后，连接直接销毁</li><li><strong>CLOSE_WAIT</strong>：表示正在等待关闭，该状态只在被动端出现，即当主动断开的一端调用close()后发送FIN报文给被动端，被动段必然会回应一个ACK(这是由TCP协议层决定的)，这个时候，TCP连接状态就进入到CLOSE_WAIT</li><li><strong>LAST_ACK</strong>：当被动关闭的一方在发送FIN报文后，等待对方的ACK报文的时候，就处于LAST_ACK的状态，当收到对方的ACK之后，就进入到CLOSED状态了</li><li><strong>TIME_WAIT</strong>：该状态是最常见的状态，主动方在收到对方FIN后，就由FIN_WAIT_2状态进入到TIME_WAIT状态</li><li><strong>CLOSING</strong>：这个状态是一个比较特殊的状态，也比较少见，正常情况下不会出现，但是当双方同时都作为主动的一方，调用close()关闭连接的时候，两边都进入FIN_WAIT_1的状态，此时期望收到的是ACK包，进入FIN_WAIT_2的状态，但是却先收到了对方的FIN包，这个时候，就会进入到CLOSING的状态，然后给对方一个ACK，接收到ACK后直接进入到CLOSED状态</li></ul><h3 id="3、11种状态"><a href="#3、11种状态" class="headerlink" title="3、11种状态"></a>3、11种状态</h3><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E7%BD%91%E7%BB%9C/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E4%BB%A5%E5%8F%8A11%E7%A7%8D%E7%8A%B6%E6%80%81/11%E7%A7%8D%E7%8A%B6%E6%80%81.png" alt="11种状态_01.png"></p><p>1、一开始，建立连接之前服务器和客户端的状态都为CLOSED；<br>2、服务器创建socket后开始监听，变为LISTEN状态；<br>3、客户端请求建立连接，向服务器发送SYN报文，客户端的状态变味SYN_SENT；<br>4、服务器收到客户端的报文后向客户端发送ACK和SYN报文，此时服务器的状态变为SYN_RCVD；<br>5、然后，客户端收到ACK、SYN，就向服务器发送ACK，客户端状态变为ESTABLISHED；<br>6、服务器端收到客户端的ACK后变为ESTABLISHED。此时3次握手完成，连接建立！</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/%E7%BD%91%E7%BB%9C/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E4%BB%A5%E5%8F%8A11%E7%A7%8D%E7%8A%B6%E6%80%81/11%E7%A7%8D%E7%8A%B6%E6%80%812.png" alt="11种状态_02.png"></p><blockquote><p>由于TCP连接是全双工的，断开连接会比建立连接麻烦一点点。<br>1、客户端先向服务器发送FIN报文，请求断开连接，其状态变为FIN_WAIT1；<br>2、服务器收到FIN后向客户端发送ACK，服务器的状态围边CLOSE_WAIT；<br>3、客户端收到ACK后就进入FIN_WAIT2状态，此时连接已经断开了一半了。如果服务器还有数据要发送给客户端，就会继续发送；<br>4、直到发完数据，就会发送FIN报文，此时服务器进入LAST_ACK状态；<br>5、客户端收到服务器的FIN后，马上发送ACK给服务器，此时客户端进入TIME_WAIT状态；<br>6、再过了2MSL长的时间后进入CLOSED状态。服务器收到客户端的ACK就进入CLOSED状态。<br>至此，还有一个状态没有出来：CLOSING状态。<br>CLOSING状态表示：<br>客户端发送了FIN，但是没有收到服务器的ACK，却收到了服务器的FIN，这种情况发生在服务器发送的ACK丢包的时候，因为网络传输有时会有意外。</p></blockquote><pre class="line-numbers language-none"><code class="language-none">LISTEN：等待从任何远端TCP 和端口的连接请求。SYN_SENT：发送完一个连接请求后等待一个匹配的连接请求。SYN_RECEIVED：发送连接请求并且接收到匹配的连接请求以后等待连接请求确认。ESTABLISHED：表示一个打开的连接，接收到的数据可以被投递给用户。连接的数据传输阶段的正常状态。FIN_WAIT_1：等待远端TCP 的连接终止请求，或者等待之前发送的连接终止请求的确认。FIN_WAIT_2：等待远端TCP 的连接终止请求。CLOSE_WAIT：等待本地用户的连接终止请求。CLOSING：等待远端TCP 的连接终止请求确认。LAST_ACK：等待先前发送给远端TCP 的连接终止请求的确认（包括它字节的连接终止请求的确认）TIME_WAIT：等待足够的时间过去以确保远端TCP 接收到它的连接终止请求的确认。TIME_WAIT 两个存在的理由：          1.可靠的实现tcp全双工连接的终止；          2.允许老的重复分节在网络中消逝。CLOSED：不在连接状态（这是为方便描述假想的状态，实际不存在）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 三次握手 </tag>
            
            <tag> 四次挥手 </tag>
            
            <tag> 计算机网络 </tag>
            
            <tag> TCP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《我的阿里云OSS被人刷流量了，欠费1000元，我想不通》</title>
      <link href="/2023/03/26/wo-de-a-li-yun-oss-bei-ren-shua-liu-liang-liao-qian-fei-1000-yuan-wo-xiang-bu-tong/"/>
      <url>/2023/03/26/wo-de-a-li-yun-oss-bei-ren-shua-liu-liang-liao-qian-fei-1000-yuan-wo-xiang-bu-tong/</url>
      
        <content type="html"><![CDATA[<p>《我的阿里云OSS被人刷流量了，欠费1000元，我想不通》</p><p>1、阿里云能否设置欠费自动停机？</p><p>在被刷前，我设置了欠费20元自动停机，但阿里云的回复是欠费20元停机的额度并不是欠费上限，因为OSS流量统计生成的延迟时间是3小时（特殊时间可能会超过3小时），也就是我在收到停机通知的时候，已经被刷了3个小时，这3个小时生成的费用，由我承担。根据我的实际情况，是延迟了3小时才停机的。</p><p>2、OSS流量统计是3小时更新一次，账单大约是1小时出一次，我累计收到约1200元的费用，目前已经交清，我向阿里云申请免掉延迟的时间产生的费用，他们不搭理我了。</p><p>3、千万不要把阿里云欠费停机这事儿当回事！！！流量统计有3小时延迟，这期间的账单依然要用户自己买单。</p><p>4、千万不要把阿里云欠费停机这事儿当回事！！！流量统计有3小时延迟，这期间的账单依然要用户自己买单。</p><p>5、千万不要把阿里云欠费停机这事儿当回事！！！流量统计有3小时延迟，这期间的账单依然要用户自己买单。</p><p>我在想，假如这3小时，被刷了几百T，那我是真要把我这按揭的房子卖掉。</p><p>另外，也遇到了一些暖心的事，有MJJ加我QQ，上来就给我发红包，但确实没理由收，发帖也确实是为了提醒各位，没有卖惨的意思。</p><p>这是你欠缴的学费</p><p>好，又get了一个小知识</p><p>以后还是谨慎点吧，用个云盘分享就行了，永远不要忽略小人的存在，坛子里的小人很多。</p><p>用过大佬的软件 不错</p><p>帮顶吧 发到网上就挺多这种危险的人的。。</p><p>表示也被OSS流量延时统计给整过，一个大意钱就无了</p><p>开源用github分发</p><p>贱人太多了</p><p>这真是防不胜防啊</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>阿里云对象存储 OSS 限流超过阈值自动关闭【防破产，保平安】</title>
      <link href="/2023/03/26/a-li-yun-dui-xiang-cun-chu-oss-xian-liu-chao-guo-yu-zhi-zi-dong-guan-bi-fang-po-chan-bao-ping-an/"/>
      <url>/2023/03/26/a-li-yun-dui-xiang-cun-chu-oss-xian-liu-chao-guo-yu-zhi-zi-dong-guan-bi-fang-po-chan-bao-ping-an/</url>
      
        <content type="html"><![CDATA[<h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>使用对象存储，遇到恶意盗刷流量，不能及时发现，搞不好会“破产”的。市面上的云服务器对象存储，都没有带宽限制（单链接限速不算），也没有超过流量阈值，自动停止的功能。甚至有些拒绝恶意IP访问都不可以。。。这种状况已经持续很多年了</p><p>（设置referer 设置防盗链是挡不住恶意刷流量的 <a href="https://help.aliyun.com/document_detail/31869.html">https://help.aliyun.com/document_detail/31869.html</a> ）</p><p><strong>“对象存储破产案例“:D</strong></p><p><a href="https://www.v2ex.com/t/269463?p=1">https://www.v2ex.com/t/269463?p=1</a></p><p><a href="https://developer.aliyun.com/ask/196191">https://developer.aliyun.com/ask/196191</a></p><p><a href="https://segmentfault.com/q/1010000000718083">https://segmentfault.com/q/1010000000718083</a></p><p><a href="https://segmentfault.com/q/1010000007911554">https://segmentfault.com/q/1010000007911554</a></p><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a><strong>原因</strong></h2><p>阿里云给的解释是“考虑到一键关闭会导致客户的业务受到影响，因此OSS暂时没有提供此功能”。</p><p>网上有人说，貌似是因为对象存储的结构不能及时统计用户的流量使用。对一些超级流量大户，短时间也会有巨额流量费用。。。阿里云，七牛云都没有这个。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>我发现一种方法好像可以解决。是个好思路，过阵子，些代码测试一下。原理是，对象存储报警有个回调功能，可以使用回调功能请求 OSS 的接口，修改 OSS Bucket 的读写权限为私有，这样直接禁止所有人消耗 OSS 流量。</p><p><strong>第一步，对象存储报警</strong></p><p><img src="https://raw.githubusercontent.com/xiangchengkang/blogImage/main/img/1587147934833.jpg" alt="img"></p><p><img src="https://raw.githubusercontent.com/xiangchengkang/blogImage/main/img/1587147859457.jpg" alt="img"></p><p><strong>第二步，回调设置对象存储读写权限</strong></p><p>对象存储 OSS API 中有个接口 PutBucketACL，可以设置 Bucket 的读写权限。PutBucketACL 接口用于修改存储空间（Bucket）的访问权限。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">PUT <span class="token operator">/</span>?acl HTTP<span class="token operator">/</span><span class="token number">1.1</span>x<span class="token operator">-</span>oss<span class="token operator">-</span>acl: PermissionHost: BucketName<span class="token punctuation">.</span>oss<span class="token operator">-</span>cn<span class="token operator">-</span>hangzhou<span class="token punctuation">.</span>aliyuncs<span class="token punctuation">.</span>com<span class="token keyword">Date</span>: GMT <span class="token keyword">Date</span><span class="token keyword">Authorization</span>: SignatureValue<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>PutBucketACL接口通过Put请求中的x-oss-acl请求头来设置权限，如果没有该请求头，权限设置不生效。</p><p>取值：public-read-write、public-read、private。</p><p><a href="https://help.aliyun.com/document_detail/31960.html">https://help.aliyun.com/document_detail/31960.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿里云oss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手把手教你Typora图床配置(PicGo+阿里云OSS腾讯云COS)</title>
      <link href="/2023/03/25/shou-ba-shou-jiao-ni-typora-tu-chuang-pei-zhi-picgo-a-li-yun-oss-teng-xun-yun-cos/"/>
      <url>/2023/03/25/shou-ba-shou-jiao-ni-typora-tu-chuang-pei-zhi-picgo-a-li-yun-oss-teng-xun-yun-cos/</url>
      
        <content type="html"><![CDATA[<h1 id="Gitee图床被封📢📢"><a href="#Gitee图床被封📢📢" class="headerlink" title="Gitee图床被封📢📢"></a>Gitee图床被封📢📢</h1><p>这段时间，平时喜欢用gitee图床写文档的同学应该都遇到了typora上传Gitee图床失败,一直报403错误的问题。在网上查了很多信息，失败的原因是Gitee仓库因为外链过多，官方加了防盗链不让用了，显然gitee 被封了。</p><p><img src="https://sunmingtypora.oss-cn-qingdao.aliyuncs.com/mytypora/202204081629632.png" alt="image-20220406163726705"></p><p><strong>❤我只能说gitee不讲武德，韭菜没了❤</strong></p><p>既然gitee图床已经传不上去了，那就赶紧更换图床吧，毕竟本地typora的很多篇文章都寄了，及时止损，目前只有各大公司提供的OSS服务比较靠谱，本篇将教你手把手使用 阿里云的OSS服务/腾讯云的COS服务搭建图床，两种对象存储服务都很不错，大家根据实际情况具体选择一种就行。<br><strong>❤️我们搭建图床的原因❤️</strong></p><p>在日常使用typora写文档的时候，typora在粘贴图片之后，都是拷贝图片到本地目录，这样在分享文档给别人的时候，由于图片资源是本地的，我们每次传输文档时要么每次都附带着一个图片资源压缩包要么只能导出为pdf或者word（排版会变乱），如果我们直接发单个文件，想让别人只要需要打开typora就可以看到全部内容和图片，这个时候就要用到的图床了。<br>❤️<strong>图床的作用❤️</strong></p><p>把图片存在网站上，对应的图片生成一个链接，然后利用<a href="https://so.csdn.net/so/search?q=markdown%E8%AF%AD%E6%B3%95&amp;spm=1001.2101.3001.7020">markdown语法</a>插入到文本中就可以调用图片了，这样配置以后，可以提高写文档的质量和速率，轻松输出技术文档。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/img/789ad12707496eac182f27be61c89806.png"></p><p><strong>❤️Typora + PicGo +阿里云OSS图床 / 腾讯云COS图床配置思路❤️</strong><br>第一步：我们首先安装PicGo，并且开放PicGo的端口号，将Typora与PicGo进行关联配置。</p><p>第二步：在完成上述操作后，购买对象存储服务（两者买其一即可），然后进行创建云存储空间并做好PicGo相关配置。</p><p>第三步：最后我们进行Typora+图片上传测试！</p><h2 id="✨安装PicGo配置Typora-非常详细"><a href="#✨安装PicGo配置Typora-非常详细" class="headerlink" title="✨安装PicGo配置Typora(非常详细)"></a>✨安装PicGo配置Typora(非常详细)</h2><h3 id="第一步：安装PicGo"><a href="#第一步：安装PicGo" class="headerlink" title="第一步：安装PicGo"></a>第一步：安装PicGo</h3><ul><li><p>一款功能非常强大的图床的工具，支持<code>SM.MS</code>、<code>腾讯COS</code>、<code>GitHub图床</code>、<code>七牛云图床</code>、<code>Imgur图床</code>、<code>阿里云OSS</code>、<code>gitee</code>等多种图床平台。</p></li><li><p>下载</p><blockquote><p>下载地址：<a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a></p><p>根据自己电脑配置进行选择安装包，一般安装PicGo-Setup-2.3.0-beta.7-ia32.exe。</p></blockquote></li><li><p>特点</p><p>PicGo<strong>最大的特点是，可以和Typora结合使用</strong>，配置好关联之后，Typora写文章时，如果需要穿插图片，只需要将图片复制粘贴到Typora的编辑区域，就自动通过PicGo上传到指定图床，得到外网能访问的URL并展示。</p></li></ul><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/img/20230325165301.png"></p><p>我们在PicGo中打开<code>PicGo设置</code>，找到<code>设置Server</code>，点击设置，点击开启<code>Server</code>，点击确定即可。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/img/20230325165451.png"></p><h3 id="第二步：配置Typora"><a href="#第二步：配置Typora" class="headerlink" title="第二步：配置Typora"></a>第二步：配置Typora</h3><p>我们在Typora中打开<code>文件-偏好设置</code>，选择PicGo(app)，<code>路径</code>就是安装PicGo的文件夹，选中<code>PicGo.exe</code>即可</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/img/20230325171648.png"></p><h2 id="✨云服务1：阿里云OSS搭建图床-非常详细"><a href="#✨云服务1：阿里云OSS搭建图床-非常详细" class="headerlink" title="✨云服务1：阿里云OSS搭建图床(非常详细)"></a>✨云服务1：阿里云OSS搭建图床(非常详细)</h2><h3 id="第一步：开通阿里云对象存储"><a href="#第一步：开通阿里云对象存储" class="headerlink" title="第一步：开通阿里云对象存储"></a>第一步：开通阿里云对象存储</h3><ul><li>开通阿里云对象存储<a href="https://www.aliyun.com/product/oss%EF%BC%8C%E6%B3%A8%E5%86%8C%E9%98%BF%E9%87%8C%E4%BA%91%E8%B4%A6%E5%8F%B7%E5%90%8E,%E5%BC%80%E9%80%9A%E5%AF%B9%E8%B1%A1%E5%82%A8%E5%AD%98%EF%BC%8C%E8%BF%9B%E5%85%A5%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8OSS%E7%9A%84%E6%8E%A7%E5%88%B6%E5%8F%B0%E3%80%82">https://www.aliyun.com/product/oss，注册阿里云账号后,开通对象储存，进入对象存储OSS的控制台。</a></li></ul><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/img/0aa514785eb6d10926793a8d070785a8.png"></p><h3 id="第二步：创建bucket"><a href="#第二步：创建bucket" class="headerlink" title="第二步：创建bucket"></a>第二步：创建bucket</h3><ul><li>在左侧选择概览，然后在右侧Bucket管理中创建一个新的bucket</li></ul><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/img/6ba76278fa3c5cc4ecf372ae8a949262.png"></p><ul><li><p>创建Bucket具体配置</p><blockquote><p>Bucket名字不能有大写字母、地域就近选择、存储类型选择<code>标准存储</code>，读写权限<code>公共读</code></p></blockquote></li><li><p>创建成功后，可以在Bucket列表中查看，记住自己的访问域名和地域节点，后面会用到。</p></li></ul><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/img/6c2171b5c589100fb4752199bdfed511.png"></p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/img/6a97a295d9ae28927bac3e334dfec1f3.png"></p><h3 id="第三步：创建AccessKey"><a href="#第三步：创建AccessKey" class="headerlink" title="第三步：创建AccessKey"></a>第三步：创建AccessKey</h3><p>页面右上角，鼠标放在头像处，在弹出的框里选择AccessKey管理，在弹出的选项框里，选择<code>继续使用</code>。</p><p><img src="https://sunmingtypora.oss-cn-qingdao.aliyuncs.com/mytypora/202204081630950.png" alt="image-20220408152611026"> <img src="https://sunmingtypora.oss-cn-qingdao.aliyuncs.com/mytypora/202204081630455.png" alt="image-20220408152648508"></p><p>进入后，创建一个<code>AccessKey</code>。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/img/17c21f9d82463c07ef75c8a3b84b7803.png"></p><p>在弹出的界面里，记住你的<code>accessKeyId</code>和<code>accessKeySecret</code>。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/img/82cfd2c526f3b9642fb5727ca10f1ce9.png"></p><p>第四步：了解收费标准<br>阿里云对象存储OSS的收费是独立的，有两种收费形式</p><p>以充值的方式使用储存容量以及流量(默认状态)<br>按年/月收费，购买一定存储包，流量额外收费<br>目前我们购买了下OSS存储包，但是依旧要为访问图床的流量付钱，仔细算过以后，作为图床的数据量其实很小的，我们使用默认的0.12元/1GB/1个月，一年共计1.44元，远低于40GB的9元购买年储存包。<br>最后记得给阿里云账户充值几块钱，估计2块钱就可以用一年左右。</p><h3 id="第五步：配置PicGo"><a href="#第五步：配置PicGo" class="headerlink" title="第五步：配置PicGo"></a>第五步：配置PicGo</h3><p>我们打开打开PicGo的主界面,在图床设置里面选择阿里云OSS，依照下面注意事项填写信息。</p><p>设定Keyld：填写我们在第三步中获得的AccessKeyID</p><p>设定KeySecret：填写我们在第三步中获得的AccessKeyIDSecret</p><p>设定储存空间名：填写我们在第二步中填写的bucket名称</p><p>确认存储区域：填写我们在第二步中查看的地域节点，注意复制的格式：只需要复制oss-cn-Xxxx即可，不需要后面的.aliyuncs.com</p><p>指定存储路径：其实就是自定义一个文件夹的名字，以/结尾，它会自动在你的bucket里面创建一个文件夹，并把图片上传进去。</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/img/20230325190341.png"></p><p>设置完以后，点击确定即可，后面我们统一测试。</p><p>到这里，我们阿里云OSS的图床配置完毕了😎。</p><h2 id="✨云服务2：腾讯云COS搭建图床-非常详细"><a href="#✨云服务2：腾讯云COS搭建图床-非常详细" class="headerlink" title="✨云服务2：腾讯云COS搭建图床(非常详细)"></a>✨云服务2：腾讯云COS搭建图床(非常详细)</h2><h3 id="第一步：购买腾讯云对象存储"><a href="#第一步：购买腾讯云对象存储" class="headerlink" title="第一步：购买腾讯云对象存储"></a>第一步：购买腾讯云对象存储</h3><ul><li>购买腾讯云对象存储 <a href="https://buy.cloud.tencent.com/cos">https://buy.cloud.tencent.com/cos</a></li></ul><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/img/9e0d3aa9079e0be37b1738c8523e3c67.png"></p><h3 id="第二步：创建桶并配置"><a href="#第二步：创建桶并配置" class="headerlink" title="第二步：创建桶并配置"></a>第二步：创建桶并配置</h3><ul><li>相关注意信息如图所示</li></ul><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/img/202204081630313.png"></p><h3 id="第三步：申请密钥"><a href="#第三步：申请密钥" class="headerlink" title="第三步：申请密钥"></a>第三步：申请密钥</h3><ul><li>前往<a href="https://console.cloud.tencent.com/cam/capi%EF%BC%8C%E6%88%91%E4%BB%AC%E9%80%9A%E8%BF%87%E9%85%8D%E7%BD%AEAPI%E7%A7%98%E9%92%A5%E6%8B%BF%E5%88%B0%60SecretId%60%E5%92%8C%60SecretKey%60%E3%80%82">https://console.cloud.tencent.com/cam/capi，我们通过配置API秘钥拿到`SecretId`和`SecretKey`。</a></li></ul><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/img/d8e5f38357ff996376bbd954dc02bb90.png"></p><h3 id="第四步：获取其他配置信息"><a href="#第四步：获取其他配置信息" class="headerlink" title="第四步：获取其他配置信息"></a>第四步：获取其他配置信息</h3><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/img/bbdafa34ad0f68d32cae393f1e7334e7.png"></p><ul><li>如图，我们拿到以下信息</li></ul><pre class="line-numbers language-none"><code class="language-none">APPID：13xxxxxxx存储空间名称：sm-13xxxxx存储区域：ap-nanjing<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="第五步：配置PicGO"><a href="#第五步：配置PicGO" class="headerlink" title="第五步：配置PicGO"></a>第五步：配置PicGO</h3><p>根据上面配置得到的配置信息，设置PicGo的腾讯云COS参数</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/img/b62066531cd551f74a6d91bf5e5c5686.png"></p><p>设置完以后，点击确定即可，后面我们统一测试。</p><p>到此，Typora + PicGo + 腾讯云COS 配置完毕😎。</p><h2 id="✨Typora上传测试效果"><a href="#✨Typora上传测试效果" class="headerlink" title="✨Typora上传测试效果"></a>✨Typora上传测试效果</h2><p>经过上面的一系列配置之后，我们就完成了Typora的图床配置，现在我们可以使用Markdown开始写文章了，图片、截图会在粘贴之后，自动通过PicGo上传到了远端图床，效果如下：</p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/img/202204081629355.gif"></p><p>至此，我们就可以专心写文档了，不用花精力去处理图片，排版这些琐碎、耗时的工作，所以说图床对于经常写文的小伙伴是极力推荐的！</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> 阿里云oss </tag>
            
            <tag> 腾讯云cos </tag>
            
            <tag> picgo </tag>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown使用教程</title>
      <link href="/2023/03/24/markdown-shi-yong-jiao-cheng/"/>
      <url>/2023/03/24/markdown-shi-yong-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="markdown引入图片、音频、视频"><a href="#markdown引入图片、音频、视频" class="headerlink" title="markdown引入图片、音频、视频"></a>markdown引入图片、音频、视频</h1><h2 id="1、markdown-简介"><a href="#1、markdown-简介" class="headerlink" title="1、markdown 简介"></a><strong>1、markdown 简介</strong></h2><ul><li>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。</li><li>Markdown 编写的文档后缀为 .md, .markdown</li><li>简单易学容易上手，十分钟左右即可上手</li><li>有助于作者专心写作（各种在线博客编辑坑太多，文档丢失、广告太多，可移植性差）</li></ul><h2 id="2、插入图片"><a href="#2、插入图片" class="headerlink" title="2、插入图片"></a><strong>2、插入图片</strong></h2><p>我们在写博客的时候总免不了要插入各种图片，下面就是markdown插入图片的语法</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">![图片描述关键词](图片链接地址)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3、插入音频"><a href="#3、插入音频" class="headerlink" title="3、插入音频"></a><strong>3、插入音频</strong></h2><h3 id="3-1-使用audio-标签"><a href="#3-1-使用audio-标签" class="headerlink" title="3.1 使用audio 标签"></a><strong>3.1 使用audio 标签</strong></h3><p>语法如下：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">&lt;audio id="audio" controls="" preload="none"&gt;      &lt;source id="mp3" src="音频地址"&gt;&lt;/audio&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>插入音频后效果如下：</p><audio id="audio" controls="" preload="none">      <source id="mp3" src="音频地址"></audio><h3 id="3-2-使用iframe标签"><a href="#3-2-使用iframe标签" class="headerlink" title="3.2 使用iframe标签"></a><strong>3.2 使用iframe标签</strong></h3><p>我们以网易云音乐为例 1.首先在网易云音乐播放界面，点击生成外链播放器</p><p><img src="https://pic4.zhimg.com/80/v2-3c2ef02608fc13a41a3c1f1d92480073_1440w.webp" alt="img"></p><p>2.选择自己想要的大小的iframe代码块</p><p><img src="https://pic3.zhimg.com/80/v2-243b06dc7502415ad623c0cd43d726be_1440w.webp" alt="img"></p><p>3.复制iframe代码块嵌入到页面中</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&amp;id=1488737309&amp;auto=1&amp;height=66"&gt;&lt;/iframe&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>效果如下：</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=1488737309&amp;auto=1&amp;height=66"></iframe><h2 id="4、引入视频"><a href="#4、引入视频" class="headerlink" title="4、引入视频"></a><strong>4、引入视频</strong></h2><p>对应语法如下，这两个都可以</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>视频链接<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>498</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>510</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>视频链接<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>我们以小破站为例，因为免费。小破站牛逼 1.找到我们想要的视频，然后点击下面的分享按钮</p><p><img src="https://pic3.zhimg.com/80/v2-8ffa8949d227124109aa1d7792412a06_1440w.webp" alt="img"></p><p>2.加入一个自适应iframe</p><iframe src="//player.bilibili.com/player.html?aid=59317437&amp;bvid=BV1Pt411G7qh&amp;cid=103365806&amp;page=1" scrolling="no" border="20" frameborder="no" framespacing="0" allowfullscreen="allowfullscreen" height="498" width="100%"> </iframe><pre class="line-numbers language-none"><code class="language-none">&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/dQw4w9WgXcQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><iframe width="560" height="315" src="https://www.youtube.com/embed/dQw4w9WgXcQ" frameborder="0" allowfullscreen=""></iframe> ]]></content>
      
      
      <categories>
          
          <category> 软件工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> 标记语言 </tag>
            
            <tag> 轻量级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github使用教程</title>
      <link href="/2023/03/23/github-shi-yong-jiao-cheng/"/>
      <url>/2023/03/23/github-shi-yong-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h1><h2 id="🌏初始化仓库"><a href="#🌏初始化仓库" class="headerlink" title="🌏初始化仓库"></a>🌏初始化仓库</h2><p><strong>git init</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">主要用来初始化一个空的git本地仓库。执行完上面的命令，当前目录下会自动生成<span class="token punctuation">.</span>git隐藏文件夹，该隐藏文件夹就是git版本库<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="🌏查看仓库状态"><a href="#🌏查看仓库状态" class="headerlink" title="🌏查看仓库状态"></a>🌏查看仓库状态</h2><p><strong>git status</strong></p><p>🌏设置用户信息<br>git config –global user.name ‘名字，git config –global user.email ‘邮箱’’</p> <pre class="line-numbers language-none"><code class="language-none">如：$ git config --global user.name 'your_name ' $ git config --global user.email 'your_email@qq.com'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="🌏创建钥匙"><a href="#🌏创建钥匙" class="headerlink" title="🌏创建钥匙"></a>🌏创建钥匙</h2><p><strong>ssh-keygen -t rsa -C “邮箱”</strong></p><h2 id="🌏验证钥匙"><a href="#🌏验证钥匙" class="headerlink" title="🌏验证钥匙"></a>🌏验证钥匙</h2><p><strong>ssh -T <a href="mailto:git@github.com">git@github.com</a></strong></p><h2 id="🌏与远程仓库建立连接"><a href="#🌏与远程仓库建立连接" class="headerlink" title="🌏与远程仓库建立连接"></a>🌏与远程仓库建立连接</h2><p><strong>git remote add origin 地址</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">如： git remote add origin git@github<span class="token punctuation">.</span>com<span class="token operator">:</span>yourName<span class="token operator">/</span>repositoryname<span class="token punctuation">.</span>git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="🌏重新设置仓库url地址"><a href="#🌏重新设置仓库url地址" class="headerlink" title="🌏重新设置仓库url地址"></a>🌏重新设置仓库url地址</h2><p><strong>git remote set-url origin 地址</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">如： git remote set<span class="token operator">-</span>url origin https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>yourname<span class="token operator">/</span>learngit<span class="token punctuation">.</span><span class="token function">git</span> <span class="token punctuation">(</span>这个是你的复制的仓库地址<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="🌏初次拉取代码到本地"><a href="#🌏初次拉取代码到本地" class="headerlink" title="🌏初次拉取代码到本地"></a>🌏初次拉取代码到本地</h2><p><strong>git pull origin master –allow-unrelated-histories</strong></p><h2 id="🌏克隆仓库代码到本地"><a href="#🌏克隆仓库代码到本地" class="headerlink" title="🌏克隆仓库代码到本地"></a>🌏克隆仓库代码到本地</h2><p><strong>git clone 远程地址</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">git clone git@github<span class="token punctuation">.</span>com<span class="token operator">:</span><span class="token constant">FX336494</span><span class="token operator">/</span>admin_v1<span class="token punctuation">.</span>git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="🌏拉取分支代码"><a href="#🌏拉取分支代码" class="headerlink" title="🌏拉取分支代码"></a>🌏拉取分支代码</h2><p><strong>git pull origin ‘分支名 ’</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">如：git pull origin  <span class="token string">'dev'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="提交文件到仓库"><a href="#提交文件到仓库" class="headerlink" title="提交文件到仓库"></a>提交文件到仓库</h1><h2 id="🌏添加文件"><a href="#🌏添加文件" class="headerlink" title="🌏添加文件"></a>🌏添加文件</h2><p><strong>git add ‘文件名’</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">添加文件先到缓存区<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="🌏添加所有文件"><a href="#🌏添加所有文件" class="headerlink" title="🌏添加所有文件"></a>🌏添加所有文件</h2><p><strong>git add .</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">点表示所有文件到缓存区<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="🌏重命名文件名称"><a href="#🌏重命名文件名称" class="headerlink" title="🌏重命名文件名称"></a>🌏重命名文件名称</h2><p><strong>git mv 旧文件名 新文件名</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">如将<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">old.html</span><span class="token template-punctuation string">`</span></span>文件修改为<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">new.html</span><span class="token template-punctuation string">`</span></span><span class="token operator">:</span> git mv old<span class="token punctuation">.</span>html <span class="token keyword">new</span><span class="token punctuation">.</span>html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="提交指定文件"><a href="#提交指定文件" class="headerlink" title="提交指定文件"></a>提交指定文件</h1><h2 id="🌏git-add-文件名称"><a href="#🌏git-add-文件名称" class="headerlink" title="🌏git add 文件名称"></a>🌏git add 文件名称</h2><p><a href="https://so.csdn.net/so/search?q=cd%E5%91%BD%E4%BB%A4&amp;spm=1001.2101.3001.7020">cd命令</a>进入到文件所在的目录 或在文件管理器中找到文件右键 <code>Git Bash Here</code><br>如：提交<code>index.vue</code>: git add <code>index.vue</code> 然后<code>commit</code>与<code> push</code></p><h1 id="提交指定文件夹中的所有文件"><a href="#提交指定文件夹中的所有文件" class="headerlink" title="提交指定文件夹中的所有文件"></a>提交指定文件夹中的所有文件</h1><p>cd命令进入到所要提交的文件夹或在文件管理器中右键 Git Bash Here<br><code>git add .</code><br>然后 <code>commit </code>与 <code>push</code></p><h2 id="🌏提交文件"><a href="#🌏提交文件" class="headerlink" title="🌏提交文件"></a>🌏提交文件</h2><p><strong>git commit -m ‘备注’</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">如：git commit <span class="token operator">-</span>m <span class="token string">'首次上传'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="🌏推送文件到仓库"><a href="#🌏推送文件到仓库" class="headerlink" title="🌏推送文件到仓库"></a>🌏推送文件到仓库</h2><p><strong>git push origin master</strong></p><pre class="line-numbers language-none"><code class="language-none">推送文件到仓库master（主）分支主要是将暂存区里的改动给提交到本地的版本库。每次使用git commit 命令我们都会在本地版本库生成一个40位的哈希值，这个哈希值也叫commit-id，commit-id在版本回退的时候是非常有用的，它相当于一个快照,可以在未来的任何时候通过与git reset的组合命令回到这里。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="🌏强制推送到分支"><a href="#🌏强制推送到分支" class="headerlink" title="🌏强制推送到分支"></a>🌏强制推送到分支</h2><p><strong>git push -u -f origin master</strong></p><pre class="line-numbers language-none"><code class="language-none">提交到远程仓库，这个命令中的 -f 是强制推送，因为远程仓库只有初始化的文件，所以强制推送上去就行了，不加-f 会报当前分支没有远程分支，强制推送可以覆盖master，这样就完成了第一次提交的步骤)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="删除仓库文件"><a href="#删除仓库文件" class="headerlink" title="删除仓库文件"></a>删除仓库文件</h1><h2 id="🌏查看目录"><a href="#🌏查看目录" class="headerlink" title="🌏查看目录"></a>🌏查看目录</h2><p><strong>dir</strong></p><h2 id="🌏删除指定文件"><a href="#🌏删除指定文件" class="headerlink" title="🌏删除指定文件"></a>🌏删除指定文件</h2><p><strong>git rm 文件名</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">如</span><span class="token operator">:</span> git rm index<span class="token punctuation">.</span>html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="🌏返回到上一个版本代码"><a href="#🌏返回到上一个版本代码" class="headerlink" title="🌏返回到上一个版本代码"></a>🌏返回到上一个版本代码</h2><p><strong>git reset –hard HEAD^</strong></p><h2 id="🌏返回到上两个版本代码"><a href="#🌏返回到上两个版本代码" class="headerlink" title="🌏返回到上两个版本代码"></a>🌏返回到上两个版本代码</h2><p><strong>git reset –hard HEAD^^</strong></p><h2 id="🌏返回到上三个版本代码"><a href="#🌏返回到上三个版本代码" class="headerlink" title="🌏返回到上三个版本代码"></a>🌏返回到上三个版本代码</h2><p><strong>git reset –hard HEAD^^^</strong></p><h2 id="🌏查看不同版本的-id"><a href="#🌏查看不同版本的-id" class="headerlink" title="🌏查看不同版本的 id"></a>🌏查看不同版本的 id</h2><p><strong>git log –pretty=oneline</strong></p><p><img src="https://xiangchengkang-img.oss-cn-nanjing.aliyuncs.com/img/c3c2aa16cbb34daaa8194f91d8f79eea.png"></p><h2 id="🌏返回到指定版本代码"><a href="#🌏返回到指定版本代码" class="headerlink" title="🌏返回到指定版本代码"></a>🌏返回到指定版本代码</h2><p><strong>git reset –hard 具体版本号</strong></p><pre class="line-numbers language-none"><code class="language-none">注意是将**本地文件返**回到指定版本如:git reset --hard 8ab7b23b2b305f9b793ed95a06c1add1d0a5cd61然后 git push -f -u origin master 将代码推送到仓库 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h1><h2 id="🌏查看有哪些分支"><a href="#🌏查看有哪些分支" class="headerlink" title="🌏查看有哪些分支"></a>🌏查看有哪些分支</h2><p><strong>git branch</strong></p><h2 id="🌏创建分支"><a href="#🌏创建分支" class="headerlink" title="🌏创建分支"></a>🌏创建分支</h2><p><strong>git branch 分支名</strong></p><h2 id="🌏切换分支"><a href="#🌏切换分支" class="headerlink" title="🌏切换分支"></a>🌏切换分支</h2><p><strong>git checkout 分支名</strong></p><h2 id="🌏创建和切换同时进行"><a href="#🌏创建和切换同时进行" class="headerlink" title="🌏创建和切换同时进行"></a>🌏创建和切换同时进行</h2><p><strong>git checkout -b 分支名</strong></p><h2 id="🌏删除本地分支a"><a href="#🌏删除本地分支a" class="headerlink" title="🌏删除本地分支a"></a>🌏删除本地分支a</h2><p><strong>git branch -d a</strong></p><h2 id="🌏强制删除本地分支a"><a href="#🌏强制删除本地分支a" class="headerlink" title="🌏强制删除本地分支a"></a>🌏强制删除本地分支a</h2><p>git branch -D a</p><h2 id="🌏删除远程分支"><a href="#🌏删除远程分支" class="headerlink" title="🌏删除远程分支"></a>🌏删除远程分支</h2><p><strong>git push origin –delete 分支名</strong></p><h1 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h1><h2 id="🌏将dev分支合并到master分支"><a href="#🌏将dev分支合并到master分支" class="headerlink" title="🌏将dev分支合并到master分支"></a>🌏将<code>dev</code>分支合并到<code>master</code>分支</h2><pre class="line-numbers language-none"><code class="language-none">//先切换到master分支git checkout master//拉取代码git pull up master//合并代码git merge dev//推送到master分支git push origin master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="查看已链接仓库信息"><a href="#查看已链接仓库信息" class="headerlink" title="查看已链接仓库信息"></a>查看已链接仓库信息</h1><h2 id="🌏git-remote"><a href="#🌏git-remote" class="headerlink" title="🌏git remote"></a>🌏git remote</h2><pre class="line-numbers language-none"><code class="language-none">它会列出每个远程库的简短名字。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="🌏git-remote-v"><a href="#🌏git-remote-v" class="headerlink" title="🌏git remote -v"></a>🌏git remote -v</h2><pre class="line-numbers language-none"><code class="language-none">它会列出远程库的详细信息<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="🌏恢复本地删除的文件"><a href="#🌏恢复本地删除的文件" class="headerlink" title="🌏恢复本地删除的文件"></a>🌏恢复本地删除的文件</h2><pre class="line-numbers language-none"><code class="language-none">在本地项目中右键误删文件，想再pull回来,提示`Already up-to-date`<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>方法1：</p><ul><li>git fetch –all</li><li>git reset –hard origin/master(master可修改为对应分支名)</li><li>git pull</li></ul><p>方法2：</p><ul><li>恢复单个文件 <code>git checkout index.vue</code> git checkout 文件名</li><li>恢复当前目录 <code>git checkout .</code></li></ul><p>or：<code>git checkout 分支名 --index.uve</code>完整相对路径</p><pre class="line-numbers language-none"><code class="language-none">git fetch是将远程主机的最新内容拉到本地，用户在检查了以后决定是否合并到工作本机分支中。而git pull 则是将远程主机的最新内容拉下来后直接合并，即：git pull = git fetch + git merge，这样可能会产生冲突，需要手动解决。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="github提交注释规范"><a href="#github提交注释规范" class="headerlink" title="github提交注释规范"></a>github提交注释规范</h1><ul><li><p>git commit -m “提交类型+代码修改描述”</p></li><li><p>提交类型：</p><ol><li>feat: 修改/增加新功能</li><li>fix: 修改bug/功能代码的变更</li><li>docs: 文档相关变更</li><li>style: 不影响代码含义的变更(空白/格式/缺少符号等)</li><li>refactor: 代码重构变更</li><li>perf: 改进性能的变更</li><li>test: 添加/修改现有的测试</li><li>chore: Build/.gitignore/辅助工具/库(文档生成)等变更</li></ol></li><li><p>Example: feat:修改侧边栏默认状态</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
            <tag> 使用教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo使用</title>
      <link href="/2023/03/23/hexo-de-shi-yong/"/>
      <url>/2023/03/23/hexo-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<p><span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h1 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h1><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token front-matter yaml language-yaml">title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00author: 赵奇img: /source/images/xxx.jpgtop: truecover: truecoverImg: /images/1.jpgpassword: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92toc: falsemathjax: falsesummary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要categories: Markdowntags:  - Typora  - Markdown</span><span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://gitee.com/hx926453/hexo-theme-matery">https://gitee.com/hx926453/hexo-theme-matery</a></p><a class="theme-btn" href="url" title="[title]"><i class="fa fa-icon [class]"></i>text</a><h1 id="什么是-Hexo？"><a href="#什么是-Hexo？" class="headerlink" title="什么是 Hexo？"></a>什么是 Hexo？</h1><p>Hexo 是一个快速、简洁且高效的博客框架。</p><span id="more"></span><p>Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><p>hexo官网：<a href="https://hexo.io/">https://hexo.io/</a></p><h1 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h1><p>用管理员身份打开cmd输入：npm install hexo-cli -g<br>输入hexo -version可查看版本信息。</p><h1 id="新建发布文章（post-page）"><a href="#新建发布文章（post-page）" class="headerlink" title="新建发布文章（post page）"></a>新建发布文章（post page）</h1><p>执行以下命令后会自动在<code>\myblog\source\_posts</code>下新建一个<code>a.md</code>并且标题是“a”，此时刷新<code>http://localhost:4000/</code>可以看到本地已经更新出标题为a的这篇文章。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">hexo <span class="token keyword">new</span> a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="新建草稿（draft-page）"><a href="#新建草稿（draft-page）" class="headerlink" title="新建草稿（draft page）"></a>新建草稿（draft page）</h1><p>执行以下命令后会自动在<code>\myblog\source\_drafts</code>下新建一个<code>b.md</code>并且标题是“b”，此时刷新<code>http://localhost:4000/</code>本地并没有更新出这篇文章。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">hexo <span class="token keyword">new</span> draft b<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="发布草稿"><a href="#发布草稿" class="headerlink" title="发布草稿"></a>发布草稿</h1><p>草稿可以通过命令变成发布文章，仍然是需要在根目录执行以下命令</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">hexo publish b<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个时候你会发现_drafts里的b.md不见了，跑到了_posts里面,也就说明你的草稿发布成功了。</p><h1 id="开启服务"><a href="#开启服务" class="headerlink" title="开启服务"></a>开启服务</h1><p>hexo server</p><h1 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h1><p>hexo new a</p><h1 id="新建草稿"><a href="#新建草稿" class="headerlink" title="新建草稿"></a>新建草稿</h1><p>hexo new draft b</p><h1 id="发布草稿成为文章"><a href="#发布草稿成为文章" class="headerlink" title="发布草稿成为文章"></a>发布草稿成为文章</h1><p>hexo publish b</p><h1 id="发布关于"><a href="#发布关于" class="headerlink" title="发布关于"></a>发布关于</h1><p>hexo new page c</p><h1 id="生成静态文章"><a href="#生成静态文章" class="headerlink" title="生成静态文章"></a>生成静态文章</h1><p>hexo generate 或者是 hexo g</p><h1 id="部署文章"><a href="#部署文章" class="headerlink" title="部署文章"></a>部署文章</h1><p>hexo deploy 或者是 hexo d</p><p>title: 我就是标题<br>date: 2021-09-25 23:32:04<br>comments: true #是否可评论<br>layout: post # 公开文章<br>toc: true #是否显示文章目录<br>tags:   #标签 </p><ul><li>我就是新的标签1</li><li>老子是新的标签2</li></ul><h1 id="demo1"><a href="#demo1" class="headerlink" title="demo1"></a>demo1</h1><p>demo1德莫demodemo1m</p><h2 id="demo11"><a href="#demo11" class="headerlink" title="demo11"></a>demo11</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"># <span class="token class-name">Hexo</span> <span class="token class-name">Configuration</span>## <span class="token class-name">Docs</span><span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>hexo<span class="token punctuation">.</span>io<span class="token operator">/</span>docs<span class="token operator">/</span>configuration<span class="token punctuation">.</span>html## <span class="token class-name">Source</span><span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>hexojs<span class="token operator">/</span>hexo<span class="token operator">/</span># <span class="token class-name">Site</span>title<span class="token operator">:</span> hexoDemosubtitle<span class="token operator">:</span> '这是一个demo页'description<span class="token operator">:</span> 'hexoDemo用于介绍如何使用hexo'keywords<span class="token operator">:</span> 'hexo<span class="token punctuation">,</span>node<span class="token punctuation">,</span>博客'author<span class="token operator">:</span> 项成康language<span class="token operator">:</span> zh<span class="token operator">-</span><span class="token constant">CN</span># language<span class="token operator">:</span> entimezone<span class="token operator">:</span> ''# <span class="token constant">URL</span>## <span class="token class-name">Set</span> your site url <span class="token class-name"><span class="token namespace">here<span class="token punctuation">.</span></span> For</span> example<span class="token punctuation">,</span> <span class="token keyword">if</span> you use <span class="token class-name">GitHub</span> <span class="token class-name">Page</span><span class="token punctuation">,</span> set url as 'https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>username<span class="token punctuation">.</span>github<span class="token punctuation">.</span>io<span class="token operator">/</span>project'url<span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>xiangchengkang<span class="token punctuation">.</span>github<span class="token punctuation">.</span>iopermalink<span class="token operator">:</span> <span class="token operator">:</span>year<span class="token operator">/</span><span class="token operator">:</span>month<span class="token operator">/</span><span class="token operator">:</span>day<span class="token operator">/</span><span class="token operator">:</span>title<span class="token operator">/</span>permalink_defaults<span class="token operator">:</span>pretty_urls<span class="token operator">:</span>  trailing_index<span class="token operator">:</span> <span class="token boolean">true</span> # <span class="token class-name">Set</span> <span class="token keyword">to</span> <span class="token namespace">false</span> <span class="token keyword">to</span> <span class="token namespace">remove</span> trailing 'index<span class="token punctuation">.</span>html' from permalinks  trailing_html<span class="token operator">:</span> <span class="token boolean">true</span> # <span class="token class-name">Set</span> <span class="token keyword">to</span> <span class="token namespace">false</span> <span class="token keyword">to</span> <span class="token namespace">remove</span> trailing <span class="token char">'.html'</span> from permalinks# <span class="token class-name">Directory</span>source_dir<span class="token operator">:</span> sourcepublic_dir<span class="token operator">:</span> <span class="token keyword">public</span>tag_dir<span class="token operator">:</span> tagsarchive_dir<span class="token operator">:</span> archivescategory_dir<span class="token operator">:</span> categoriescode_dir<span class="token operator">:</span> downloads<span class="token operator">/</span>codei18n_dir<span class="token operator">:</span> <span class="token operator">:</span>langskip_render<span class="token operator">:</span># <span class="token class-name">Writing</span>new_post_name<span class="token operator">:</span> <span class="token operator">:</span>title<span class="token punctuation">.</span>md # <span class="token class-name">File</span> name of <span class="token keyword">new</span> postsdefault_layout<span class="token operator">:</span> posttitlecase<span class="token operator">:</span> <span class="token boolean">false</span> # <span class="token class-name">Transform</span> title into titlecaseexternal_link<span class="token operator">:</span>  enable<span class="token operator">:</span> <span class="token boolean">true</span> # <span class="token class-name">Open</span> external links in <span class="token keyword">new</span> tab  field<span class="token operator">:</span> site # <span class="token class-name">Apply</span> <span class="token keyword">to</span> <span class="token namespace">the</span> whole site  exclude<span class="token operator">:</span> ''filename_case<span class="token operator">:</span> <span class="token number">0</span>render_drafts<span class="token operator">:</span> <span class="token boolean">false</span>post_asset_folder<span class="token operator">:</span> <span class="token boolean">false</span>relative_link<span class="token operator">:</span> <span class="token boolean">false</span>future<span class="token operator">:</span> <span class="token boolean">true</span>highlight<span class="token operator">:</span>  enable<span class="token operator">:</span> <span class="token boolean">true</span>  line_number<span class="token operator">:</span> <span class="token boolean">true</span>  auto_detect<span class="token operator">:</span> <span class="token boolean">false</span>  tab_replace<span class="token operator">:</span> ''  wrap<span class="token operator">:</span> <span class="token boolean">true</span>  hljs<span class="token operator">:</span> <span class="token boolean">false</span>prismjs<span class="token operator">:</span>  enable<span class="token operator">:</span> <span class="token boolean">false</span>  preprocess<span class="token operator">:</span> <span class="token boolean">true</span>  line_number<span class="token operator">:</span> <span class="token boolean">true</span>  tab_replace<span class="token operator">:</span> ''# <span class="token class-name">Home</span> page setting# path<span class="token operator">:</span> <span class="token class-name">Root</span> path <span class="token keyword">for</span> your blogs index page<span class="token punctuation">.</span> <span class="token punctuation">(</span><span class="token keyword">default</span> <span class="token operator">=</span> ''<span class="token punctuation">)</span># per_page<span class="token operator">:</span> <span class="token class-name">Posts</span> displayed per page<span class="token punctuation">.</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">=</span> disable pagination<span class="token punctuation">)</span># order_by<span class="token operator">:</span> <span class="token class-name">Posts</span> order<span class="token punctuation">.</span> <span class="token punctuation">(</span><span class="token class-name">Order</span> by date descending by <span class="token keyword">default</span><span class="token punctuation">)</span>index_generator<span class="token operator">:</span>  path<span class="token operator">:</span> ''  per_page<span class="token operator">:</span> <span class="token number">12</span>  order_by<span class="token operator">:</span> <span class="token operator">-</span>date# <span class="token class-name">Category</span> <span class="token operator">&amp;</span> <span class="token class-name">Tag</span>default_category<span class="token operator">:</span> uncategorizedcategory_map<span class="token operator">:</span>tag_map<span class="token operator">:</span># <span class="token class-name">Metadata</span> elements## https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>developer<span class="token punctuation">.</span>mozilla<span class="token punctuation">.</span>org<span class="token operator">/</span>en<span class="token operator">-</span><span class="token constant">US</span><span class="token operator">/</span>docs<span class="token operator">/</span><span class="token class-name">Web</span><span class="token operator">/</span><span class="token constant">HTML</span><span class="token operator">/</span><span class="token class-name">Element</span><span class="token operator">/</span>metameta_generator<span class="token operator">:</span> <span class="token boolean">true</span># <span class="token class-name">Date</span> <span class="token operator">/</span> <span class="token class-name">Time</span> format## <span class="token class-name">Hexo</span> <span class="token keyword">uses</span> <span class="token class-name">Moment</span><span class="token punctuation">.</span>js <span class="token keyword">to</span> <span class="token namespace">parse</span> and display date## <span class="token class-name">You</span> can customize the date format as defined in## http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>momentjs<span class="token punctuation">.</span>com<span class="token operator">/</span>docs<span class="token operator">/</span>#<span class="token operator">/</span>displaying<span class="token operator">/</span>format<span class="token operator">/</span>date_format<span class="token operator">:</span> <span class="token constant">YYYY</span><span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span><span class="token constant">DD</span>time_format<span class="token operator">:</span> <span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss## updated_option supports <span class="token char">'mtime'</span><span class="token punctuation">,</span> <span class="token char">'date'</span><span class="token punctuation">,</span> <span class="token char">'empty'</span>updated_option<span class="token operator">:</span> <span class="token char">'mtime'</span># <span class="token class-name">Pagination</span>## <span class="token class-name">Set</span> per_page <span class="token keyword">to</span> <span class="token number">0</span> <span class="token keyword">to</span> <span class="token namespace">disable</span> paginationper_page<span class="token operator">:</span> <span class="token number">12</span>pagination_dir<span class="token operator">:</span> page# <span class="token class-name">Include</span> <span class="token operator">/</span> <span class="token class-name">Exclude</span> <span class="token function">file</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>## include<span class="token operator">:</span><span class="token operator">/</span>exclude<span class="token operator">:</span> options only apply <span class="token keyword">to</span> <span class="token namespace">the</span> 'source<span class="token operator">/</span>' folderinclude<span class="token operator">:</span>exclude<span class="token operator">:</span>ignore<span class="token operator">:</span># <span class="token class-name">Extensions</span>## <span class="token class-name">Plugins</span><span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>hexo<span class="token punctuation">.</span>io<span class="token operator">/</span>plugins<span class="token operator">/</span>## <span class="token class-name">Themes</span><span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>hexo<span class="token punctuation">.</span>io<span class="token operator">/</span>themes<span class="token operator">/</span>theme<span class="token operator">:</span> matery# <span class="token class-name">Deployment</span>## <span class="token class-name">Docs</span><span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>hexo<span class="token punctuation">.</span>io<span class="token operator">/</span>docs<span class="token operator">/</span>one<span class="token operator">-</span>command<span class="token operator">-</span>deploymentdeploy<span class="token operator">:</span>  type<span class="token operator">:</span> <span class="token char">'git'</span>  repo<span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>xiangchengkang<span class="token operator">/</span>xiangchengkang<span class="token punctuation">.</span>github<span class="token punctuation">.</span>io<span class="token punctuation">.</span>git  branch<span class="token operator">:</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为openeuler</title>
      <link href="/2023/03/23/hua-wei-euler/"/>
      <url>/2023/03/23/hua-wei-euler/</url>
      
        <content type="html"><![CDATA[<p>openEuler目前官方分两种版本：<br>（1）创新版本：技术、内容较新，如openEuler20.9，通常半年发布一个新的版本，喜欢尝新的朋友可以选择这个版本来安装；<br>（2）稳定版本（LTS）：LTS是稳定版本，如openEuler LTS 22.03，通常两年发布一个新的版本，生产环境一般选择这个版本；</p><p>一、U盘分区<br>1、清空U盘，最重要的是清除MBR。U盘原来的MBR没有清除，很可能导致安装grub2失败。如果在安装过程中grub2提示“grub-install: warning: Attempting to install GRUB to a disk with multiple partition labels. This is not supported yet… ”，一般就是因为U盘原来的MBR没有清除。清空方法：<br>（1）组合键win+R 运行 diskpart。<br>（2）输入list disk，得到目前所有的磁盘。<br>（3）输入select disk 2 ，定位到U盘。<br>（4）输入命令clean，清除所有，（MBR，分区和资料）。<br>diskpart汇总命令如下：<br>list disk<br>select disk 1<br>clean</p><p>2、给U盘分区。我的是一个32g的U盘，分了10GB空间来做启动盘，格式为FAT32，因为要兼容UEFI，所以没有选择分区隐藏、删除等保护措施。其余20G格式化为NTFS，存放大于4G的ISO<br>CREATE PARTITION PRIMARY SIZE=10240<br>CREATE PARTITION PRIMARY<br>list PARTITION<br>select PARTITION 1<br>FORMAT FS=FAT32 LABEL=“BOOT_DISK” QUICK<br>select PARTITION 2<br>FORMAT FS=NTFS LABEL=“IMG_SET” QUICK<br>list PARTITION<br>————————————————<br>版权声明：本文为CSDN博主「mengyoufengyu」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/mengyoufengyu/article/details/118277379">https://blog.csdn.net/mengyoufengyu/article/details/118277379</a></p><pre class="line-numbers language-none"><code class="language-none">win和linux的系统格式的是不同的 linux下不能格式化win创建的分区 只要将d盘 分区删除了 变回未划分状态 linux下才能识别使用<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="Linux（openEuler）没有界面连接互联网方法"><a href="#Linux（openEuler）没有界面连接互联网方法" class="headerlink" title="Linux（openEuler）没有界面连接互联网方法"></a>Linux（openEuler）没有界面连接互联网方法</h1><p>前言:</p><table><thead><tr><th>系统</th><th>版本</th></tr></thead><tbody><tr><td>openEuler</td><td>openEuler-22.03-LTS-x86_64-dvd</td></tr></tbody></table><p>我们在安装linux之后，一般都是无界面的情况。大部分情况都是需要自己安装界面的，如果路由器的情况下直接插上网络就好了。下面就开始介绍两种方法进行linxu网络的连接。</p><p>注意: 小编是使用的第一种方法进行处理的，第二种试了下没有成功，就果断先放弃了。有时间再研究下。</p><blockquote><p><strong>第一种: 使用手机usb热点共享的方式</strong></p></blockquote><ul><li>终端中查看现有网络接口：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ip</span> addr 或 <span class="token function">ifconfig</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>连接好数据线并在手机设置中打开“通过USB共享网络”</p><p>再次查看是否将USB识别为新的网络接口，此时没有IP地址。注意新增的网络接口名称，如“usb0”</p><ul><li>为网络接口分配IP地址：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dhclient usb0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>再次查看网络接口：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ip</span> addr 或 <span class="token function">ifconfig</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>确认已接入互联网：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ping</span> www.baidu.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><strong>第二种: nmcli命令</strong></p></blockquote><p>1 ：废话</p><p>​        Nmcli（Network Manager Command Line），是一个用于识别和配置 Internet 连接的常见 Linux 应用程序。许多发行版都有一个用于在桌面环境中使用 NetworkManager 的图形小程序，但如果在 Linux 服务器上，可能将无法访问桌面。通过终端连接 Wi-Fi 的一些方法有点复杂，涉及配置文件和你知道的 PSK 密钥。nmcli 不是这样。假设有一台现代路由器，只需要知道网络的 SSID（Service Set Identifier 要连接的网络的名称）和网络密码（如果有的话）。</p><p>2：步骤</p><ul><li><p>启用 Wi-Fi 设备</p><p> 查看所有网络接口的状态，请使用以下命令：</p></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmcli dev status<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>获得网络设备列表及其类型、状态和网络连接信息。如果不确定 Wi-Fi 设备是否启用，可以使用如下命令进行检查</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmcli radio wifi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果输出显示 Wi-Fi 已 禁用，可以使用如下命令启用：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmcli radio wifi on<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>识别 Wi-Fi 接入点</li></ul><p>如果不知道 Wi-Fi 接入点的名称（也称为 SSID），可以通过扫描附近的 Wi-Fi 网络来找到它。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmcli dev wifi list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意需要连接的网络的SSID下列出的名称，下一步需要用到它。</p><ul><li>连接到 Wi-Fi</li></ul><p>启用 Wi-Fi 并识别到 SSID 后，可以尝试连接。可以使用一下命令建立连接：</p><p>将network-ssid替换为网络名称。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> nmcli dev wifi connect network-ssid<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果 Wi-Fi 具有 WEP 或 WPA 安全性，可以在命令中指定网络密码。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> nmcli dev wifi connect network-ssid password <span class="token string">"network-password"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>通过空格分割参数，若SSID参数一个以上，记得用引号括起来</p><p>或者，如果不想在屏幕上写出密码，可以使用–ask选项。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> nmcli <span class="token parameter variable">--ask</span> dev wifi connect network-ssid<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>系统现在将需要输入网络密码，但不会显示。</p><p>若设备现在已经连接到互联网，可以用ping <a href="http://www.baidu.com/">www.baidu.com</a> 测试一下。</p><p>使用 nmcli 管理网络连接, 可以通过发出以下命令查看所有已保存的连接：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmcli con show<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果连接到一个网络，但想使用不同的连接，可以通过将连接切换为down来断开连接。需要指定 SSID，或者如果有多个相同 SSID 的连接，请使用 UUID。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmcli con down ssid/uuid<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>要连接到另一个保存的连接，只需要在 nmcli 命令中传递 up 选项。确保指定要连接的新网络的 SSID 或 UUID。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmcli con up ssid/uuid<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>使用图形化连接工具</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> nmtui<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 华为openeuler </tag>
            
            <tag> 操作系统 </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
